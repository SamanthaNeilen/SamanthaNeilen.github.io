<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.0">Jekyll</generator><link href="https://samanthaneilen.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://samanthaneilen.github.io/" rel="alternate" type="text/html" /><updated>2021-04-11T18:37:04+02:00</updated><id>https://samanthaneilen.github.io/</id><title type="html">Samantha Neilen</title><subtitle>My name is Samantha Neilen, a dutch .NET developer.  I have been coding professionaly since 2008. On this blog I will be writing about multiple subjects that I use in my daily programming job or subjects that I am studying.</subtitle><entry><title type="html">Using Fiddler for HTTP traffic troubleshooting</title><link href="https://samanthaneilen.github.io/2021/04/11/Using-Fiddler-for-HTTP-traffic-troubleshooting.html" rel="alternate" type="text/html" title="Using Fiddler for HTTP traffic troubleshooting" /><published>2021-04-11T01:00:00+02:00</published><updated>2021-04-11T01:00:00+02:00</updated><id>https://samanthaneilen.github.io/2021/04/11/Using-Fiddler-for-HTTP-traffic-troubleshooting</id><content type="html" xml:base="https://samanthaneilen.github.io/2021/04/11/Using-Fiddler-for-HTTP-traffic-troubleshooting.html">&lt;p&gt;Fiddler from Telerik is an HTTP proxy that can monitor all outgoing traffic from your computer. It’s a useful tool when developing to see the actual HTTP traffic that is generated from your applications under development.&lt;/p&gt;

&lt;p&gt;We use a ton of different libraries to create and HTTP messages and send them to our own or 3rd party API. Sometimes we make assumptions on certain settings or serialization behavior, however, these assumptions might be wrong and Fiddler is a tool to help verify and troubleshoot the behavior of the API.&lt;/p&gt;

&lt;p&gt;When using local SoapUI mock services, you can only see logging that an endpoint has been called but not the message that was sent to the endpoint. When using Fiddler you can inspect the message send to the endpoint to examine if the message is as expected.&lt;/p&gt;

&lt;h3 id=&quot;using-fiddler-to-inspect-traffic&quot;&gt;Using Fiddler to inspect traffic&lt;/h3&gt;

&lt;p&gt;After you install it, you can set an option to decrypt HTTPS traffic in Tools -&amp;gt; Options -&amp;gt; HTTPS. After ticking the checkbox, it will ask you to accept and install an HTTPS certificate that can be used to decrypt HTTP traffic.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210411/EnableHttps.png&quot; alt=&quot;[Enable HTTPS option]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Fiddler acts as a man-in-the-middle receiving and passing all communications before it hits the internet. The certificate ensures that the local HTTPS traffic to Fiddler is secured and browsers and applications will accept the HTTPS connections encrypted by the Fiddler certificate. For more information and explaining how Fiddler does this, without compromising the machine to malicious attacks, see this&lt;a href=&quot;https://www.telerik.com/blogs/faq---certificates-in-Fiddler&quot;&gt; FAQ about certificates in Fiddler&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By default Fiddler will allow you to monitor traffic from your web browser, SoapUI, or Postman to a local API without additional settings. The screenshot below shows the traffic generated from Postman, SoapUI, and my browser when running a sample MVC project.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210411/CapturedTraffic.png&quot; alt=&quot;[Captured traffic]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;When using Web API that runs on localhost with IIS or IIS Express you need to set the proxy in de web.config to use the Fiddler proxy to ensure that the traffic from the Web API is routed through and captured by Fiddler.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;system.net&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;defaultProxy&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;proxy&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;proxyaddress=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://127.0.0.1:8888&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/defaultProxy&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/system.net&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;After you see the request you want to analyze use the inspectors to see the actual message.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210411/Inspectors.png&quot; alt=&quot;[Inspectors]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can save and edit messages.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210411/SaveMessage.png&quot; alt=&quot;[Save message]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210411/ReplayMessage.png&quot; alt=&quot;[Replay message]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can setup Fiddler to respond with a fixed response for a certain request&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210411/AutoResponder.png&quot; alt=&quot;[AutoResponder]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can exclude certain domains from Fiddler so requests to those domains are not routed through Fiddler.&lt;/p&gt;

&lt;p&gt;Bypass in Fiddler options:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210411/BypassOption.png&quot; alt=&quot;[Bypass option]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Web API web.config bypass option:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;system.net&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;defaultProxy&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;proxy&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;proxyaddress=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://127.0.0.1:8888&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;bypasslist&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;add&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;address=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://contoso.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/bypasslist&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/defaultProxy&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/system.net&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;resources&quot;&gt;Resources:&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.telerik.com/Fiddler/configure-Fiddler/tasks/installFiddler&quot;&gt;Telerik Fiddler Docs&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Fiddler from Telerik is an HTTP proxy that can monitor all outgoing traffic from your computer. It’s a useful tool when developing to see the actual HTTP traffic that is generated from your applications under development. We use a ton of different libraries to create and HTTP messages and send them to our own or 3rd party API. Sometimes we make assumptions on certain settings or serialization behavior, however, these assumptions might be wrong and Fiddler is a tool to help verify and troubleshoot the behavior of the API. When using local SoapUI mock services, you can only see logging that an endpoint has been called but not the message that was sent to the endpoint. When using Fiddler you can inspect the message send to the endpoint to examine if the message is as expected. Using Fiddler to inspect traffic After you install it, you can set an option to decrypt HTTPS traffic in Tools -&amp;gt; Options -&amp;gt; HTTPS. After ticking the checkbox, it will ask you to accept and install an HTTPS certificate that can be used to decrypt HTTP traffic. Fiddler acts as a man-in-the-middle receiving and passing all communications before it hits the internet. The certificate ensures that the local HTTPS traffic to Fiddler is secured and browsers and applications will accept the HTTPS connections encrypted by the Fiddler certificate. For more information and explaining how Fiddler does this, without compromising the machine to malicious attacks, see this FAQ about certificates in Fiddler. By default Fiddler will allow you to monitor traffic from your web browser, SoapUI, or Postman to a local API without additional settings. The screenshot below shows the traffic generated from Postman, SoapUI, and my browser when running a sample MVC project. When using Web API that runs on localhost with IIS or IIS Express you need to set the proxy in de web.config to use the Fiddler proxy to ensure that the traffic from the Web API is routed through and captured by Fiddler. &amp;lt;system.net&amp;gt; &amp;lt;defaultProxy enabled=&quot;true&quot;&amp;gt; &amp;lt;proxy proxyaddress=&quot;http://127.0.0.1:8888&quot;/&amp;gt; &amp;lt;/defaultProxy&amp;gt; &amp;lt;/system.net&amp;gt; After you see the request you want to analyze use the inspectors to see the actual message. You can save and edit messages. You can setup Fiddler to respond with a fixed response for a certain request You can exclude certain domains from Fiddler so requests to those domains are not routed through Fiddler. Bypass in Fiddler options: Web API web.config bypass option: &amp;lt;system.net&amp;gt; &amp;lt;defaultProxy enabled=&quot;true&quot;&amp;gt; &amp;lt;proxy proxyaddress=&quot;http://127.0.0.1:8888&quot;/&amp;gt; &amp;lt;bypasslist&amp;gt; &amp;lt;add address=&quot;https://contoso.com&quot;/&amp;gt; &amp;lt;/bypasslist&amp;gt; &amp;lt;/defaultProxy&amp;gt; &amp;lt;/system.net&amp;gt; Resources: Telerik Fiddler Docs</summary></entry><entry><title type="html">Using SoapUI for API tests</title><link href="https://samanthaneilen.github.io/2021/01/31/Using-SoapUI-for-API-tests.html" rel="alternate" type="text/html" title="Using SoapUI for API tests" /><published>2021-01-31T00:00:00+01:00</published><updated>2021-01-31T00:00:00+01:00</updated><id>https://samanthaneilen.github.io/2021/01/31/Using-SoapUI-for-API-tests</id><content type="html" xml:base="https://samanthaneilen.github.io/2021/01/31/Using-SoapUI-for-API-tests.html">&lt;p&gt;SoapUI is an API testing tool like Postman. It’s an open-source and free API testing tool. It can be used for both SOAP and REST endpoints. You can pretty easily make repeatable calls, as you can with Postman, and save the files in source control with your API.&lt;/p&gt;

&lt;p&gt;The features that make it stand out for me is the fact that you can make a TestSuite that calls several tests and the local MockServices.&lt;/p&gt;

&lt;p&gt;The TestSuites make use of the out-of-the-box assertions on the responses and these assertions can be extended by either switching to a paid version or by using Groovy scripts. You can define the URL for TestSuites in project parameters so you can easily point the TestSuite to a different URL or environment.&lt;/p&gt;

&lt;p&gt;You can define a local MockService to run on your local machine and have it return payloads to the application that you are testing or running. This can be very helpful when you are creating an application for an API that doesn’t exist yet.&lt;/p&gt;

&lt;p&gt;The drawbacks of SoapUI are the steeper learning curve for getting started compared to Postman. The fact that these capabilities are very useful for local development but not for running the tests automatically in a deployment pipeline or deploying a mock endpoint to a test environment.&lt;/p&gt;

&lt;p&gt;For more robust repeatable testing in a deployment pipeline, writing test code using C# combined with one of the testing frameworks and Selenium and/or Specflow will give you the most options. However Postman, and for extended capabilities, SoapUI will add a lot of benefits in regards to local and regression testing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of contents:&lt;/strong&gt;&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#creating-and-sharing-a-project&quot; id=&quot;markdown-toc-creating-and-sharing-a-project&quot;&gt;Creating and sharing a project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#using-custom-properties&quot; id=&quot;markdown-toc-using-custom-properties&quot;&gt;Using custom properties&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#soapui-logging&quot; id=&quot;markdown-toc-soapui-logging&quot;&gt;SoapUI logging&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#creating-a-testsuite&quot; id=&quot;markdown-toc-creating-a-testsuite&quot;&gt;Creating a TestSuite&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#creating-a-mockservice&quot; id=&quot;markdown-toc-creating-a-mockservice&quot;&gt;Creating a Mockservice&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;creating-and-sharing-a-project&quot;&gt;Creating and sharing a project&lt;/h3&gt;

&lt;p&gt;When opening SoapUI, use the Empty button to create a new project. You can right-click the new project in the navigator pane to rename the project and to add a new Rest service from URI (or even a SOAP endpoint with a WSDL) . After creating the project you can add the REST service as shown in the screenshot below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/NewProject.png&quot; alt=&quot;[New project]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/NewRestService.png&quot; alt=&quot;[New REST-service]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;This will create a service with an endpoint in de project to which you can add other endpoints and several different requests per endpoint.&lt;/p&gt;

&lt;p&gt;Double-click a specific request to open the Request editor to execute the request and view the response. Use the play button to execute the request and view the results on the right side of the window. You may have to select the JSON or HTML tab to see the response.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/NewServiceEndpointRequest.png&quot; alt=&quot;[New service endpoint request]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Add extra resources (for example /API/other-path) by right-clicking the service and select the option New Resource.&lt;/p&gt;

&lt;p&gt;Add extra methods to call the resource for different parameters and HTTP verbs by right-clicking the resource and selecting New Method (or New Child to create a sub-resource and then new Method).&lt;/p&gt;

&lt;p&gt;Use parentheses like {id} to create a parameter in the path.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/ResourceWithTemplateParameter.png&quot; alt=&quot;[Resource with template parameter]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Add extra requests to a method for different parameter values by right-clicking the method and then choosing the New Request option.&lt;/p&gt;

&lt;p&gt;For requests using a JSON body be sure to add a Content-Type: application/JSON header to the request to ensure proper interpretation of the body content. To ensure you receive a JSON response when multiple response types are possible add an Accept: application/JSON header to the request. The Request editor contains a header tab to add these headers. See the screenshot below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/AddHeader.png&quot; alt=&quot;[Add header]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In the screenshot below, I have added a request for each of the Values controller endpoints to the project in the Navigator pane. The screenshot also shows a POST request and how all the parameters and settings are set in the Request editor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/ProjectWithAllRequestAndRequestEditorParameters.png&quot; alt=&quot;[Project with all requests and Requesteditor parameters]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;When you have to wish to save the project for sharing right-click the project file in the navigator pane and select the Save Project option. This will save an XML file containing all the data. Be aware that if you set secrets in the requests that these will be embedded into the project file.&lt;/p&gt;

&lt;p&gt;The project file can be opened using the Import button in the top menu of SoapUI and saved to source control or any collaboration workspace.&lt;/p&gt;

&lt;p&gt;I have marked both options with a red square in the screenshot below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/SaveAndImportProject.png&quot; alt=&quot;[save and import project]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I have added my SoapUI project file to &lt;a href=&quot;https://github.com/SamanthaNeilen/WebApiExamples/tree/soapui-files/Test%20files&quot;&gt;my WebApi examples GitHub repository&lt;/a&gt;  and you can try importing and running the collection on a localhost instance of that project.&lt;/p&gt;

&lt;h3 id=&quot;using-custom-properties&quot;&gt;Using custom properties&lt;/h3&gt;

&lt;p&gt;SoapUI allows the use of parameters on several levels to easily switch out the parameter values for the entire project, or just on a request or TestSuite.&lt;/p&gt;

&lt;p&gt;The parameters or properties can be added to several levels. To see where you can add properties open the properties pane (if it’s not open already) from the left-hand lower side of SoapUI.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/PropertiesWindow.png&quot; alt=&quot;[Properties window]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Whenever the + button is shown you can add your properties or parameters. I like to add environment URLs on the project level. You can assign these to all the requests in the project. When you change the environment parameter used all the requests will execute for the new URL. This makes it easy to switch environments.&lt;/p&gt;

&lt;p&gt;For example, add the project Custom Properties as shown in the screenshot below. As you can see I reference the environment_local property in the environment property. The environment property will be used in the request templates for all the requests so only the value has to be changed to the correct environment property that you want to use. This way you always have all the environment URLs in one place without having to look them up.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/ProjectPropertiesEnvironments.png&quot; alt=&quot;[Project properties environments]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;To easily assign the environment property to all the requests in the project, double-click the API node to show the Service Viewer. Go to the Service Endpoints tab, change the fixed Endpoint value to the value {#Project#environment}, set the mode to overwrite, and select the Assign button to assign the parameter to all requests in the project. (Double-check with the Request editor to see that the parameter has indeed been assigned correctly).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/AssignParameter.png&quot; alt=&quot;[Assign parameter]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The syntax ${#ParameterLevel#ParameterName} to assign or use a parameter value will work on most input fields within the project.&lt;/p&gt;

&lt;p&gt;Parameters and properties are also invaluable for TestSuites and TestCases. I will explain these features in a later paragraph.&lt;/p&gt;

&lt;p&gt;I have added my exported parameterized SoapUI file to &lt;a href=&quot;https://github.com/SamanthaNeilen/WebApiExamples/tree/soapui-files/Test%20files&quot;&gt;my WebApi examples GitHub repository&lt;/a&gt; and you can try importing and running the project on a localhost instance of that project.&lt;/p&gt;

&lt;h3 id=&quot;soapui-logging&quot;&gt;SoapUI logging&lt;/h3&gt;

&lt;p&gt;SoapUI provides several types of logging. The screenshot below shows some of the more useful logs.&lt;/p&gt;

&lt;p&gt;The Raw tabs for the requests and responses show the actual URL, headers, and response content of the requests. For the request body, view the request tab. As you can see in the Raw tab for the request the URLs have been replaced by the actual values of the parameters for the send request.&lt;/p&gt;

&lt;p&gt;The HTTP logging provides a text log of all the full requests and responses (though the timestamps and newline characters can make it a bit difficult to read at times).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/LoggingPanes.png&quot; alt=&quot;[Logging panes]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;These panes will help you track down the response error codes and understand specific requests that you send using the Request editor.&lt;/p&gt;

&lt;h3 id=&quot;creating-a-testsuite&quot;&gt;Creating a TestSuite&lt;/h3&gt;

&lt;p&gt;TestSuites are a great tool to define some simple regression tests for your API. Create a new TestSuite from the project context menu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/NewTestSuite.png&quot; alt=&quot;[New TestSuite]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can add TestCases from the context menu on the new TestSuite. Each test case contains a request or a set of requests that have their responses checked for certain criteria. A test case can be a logical grouping of 1 or several requests with the same purpose like checking certain validation rules.&lt;/p&gt;

&lt;p&gt;You could define and use repeatable test steps and change certain parameters for the specific case or step. See &lt;a href=&quot;https://www.soapui.org/docs/functional-testing/modularizing-your-tests/&quot;&gt;the Soap UI Docs on modularizing your tests&lt;/a&gt; for more guidance.&lt;/p&gt;

&lt;p&gt;The image below shows a simple TestCase with a simple Assertion.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/TestSuite.png&quot; alt=&quot;[TestSuite]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Possible test step types are shown in the screenshot below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/TestSteps.png&quot; alt=&quot;[TestSteps]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The groovy steps provide extensibility by code but it does have a learning curve especially if you are not familiar with the Java programming paradigms.&lt;/p&gt;

&lt;p&gt;There are already a lot of very usable out-of-the-box assertions like the HTTP code assertions, string/content comparison, JSON path, and JSON regular expressions assertions.&lt;/p&gt;

&lt;p&gt;Be aware that the free version of SoapUI has limitations (as seen for all the greyed out options).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/ProAssertions.png&quot; alt=&quot;[Pro assertions]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can easily use the SoapUI menus on either the project to run all TestCases, a single TestSuite, or even a single TestStep with a few simple clicks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/RunTests.png&quot; alt=&quot;[Run tests]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Even if you just run these regression tests locally and keep the project file with the codebase you will always have a quick tool to verify whether or not everything is working as intended and even testers that don’t have a test automation background can maintain and extend these projects.&lt;/p&gt;

&lt;p&gt;SoapUI also has possibilities for &lt;a href=&quot;https://www.soapui.org/docs/security-testing/getting-started/&quot;&gt;security tests&lt;/a&gt;, &lt;a href=&quot;https://www.soapui.org/docs/load-testing/concept/&quot;&gt;load tests&lt;/a&gt;, and &lt;a href=&quot;https://www.soapui.org/docs/functional-testing/teststep-reference/manual-teststep/&quot;&gt;documenting manual test steps&lt;/a&gt; for an API. Please see the SoapUI docs linked in the previous sentence for more information on those.&lt;/p&gt;

&lt;h3 id=&quot;creating-a-mockservice&quot;&gt;Creating a Mockservice&lt;/h3&gt;

&lt;p&gt;A MockService is a simple local web service that is started at a certain address. You can tell the service on which endpoints to listen for requests and what responses to send back. This is a great tool when developing a consuming application where the endpoints do not yet exist or to test certain behavior (error responses) from those endpoints.&lt;/p&gt;

&lt;p&gt;To create a MockService, again use the context menu on the project node in the navigation pane.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/NewMockService.png&quot; alt=&quot;[New MockService]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The local URL at which the MockService is run can be changed from the settings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/MockServiceSettings.png&quot; alt=&quot;[MockService settings]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now you can add an endpoint (mock action) through the context menu on the MockService. Omit all the query parameters from the endpoint path and set the path parameter to a fixed value. There are ways to add scripts to the MockService so it responds more dynamically to path parameters to return a proper response. See &lt;a href=&quot;https://www.soapui.org/docs/soap-mocking/creating-dynamic-mockservices/&quot;&gt;the SoapUI docs on creating dynamic MockServices&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/NewMockAction.png&quot; alt=&quot;[NewMock action]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/NewMockResponse.png&quot; alt=&quot;[NewMock response]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can define the HTTP status code and the response body for the mock endpoint in the editor. The MockService responses allow you to define sequences of responses so (for the first response define a response message and for all subsequent responses define a very different response). Double-click the mock action to find and change the Dispatch options. The default is Sequence, meaning that all the responses are returned in order and the last response is repeated until the service is stopped or started.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20210131/MockActionSequence.png&quot; alt=&quot;[MockAction sequence]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;When a MockService is started you can still edit the responses and status codes while it’s running. SoapUI will return the newly changed response without restarting the MockService first.&lt;/p&gt;

&lt;p&gt;Be aware that when consuming the MockService from a local browser that you may have to add extra CORS endpoints to ensure the browser’s security to make the requests. See &lt;a href=&quot;https://medium.com/@andrelimamail/how-to-deal-with-cors-in-soap-ui-mock-services-or-anyother-f4cc55b3dccd&quot;&gt;this Medium article on how to handle CORS from a MockService&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="WebAPI" /><summary type="html">SoapUI is an API testing tool like Postman. It’s an open-source and free API testing tool. It can be used for both SOAP and REST endpoints. You can pretty easily make repeatable calls, as you can with Postman, and save the files in source control with your API. The features that make it stand out for me is the fact that you can make a TestSuite that calls several tests and the local MockServices. The TestSuites make use of the out-of-the-box assertions on the responses and these assertions can be extended by either switching to a paid version or by using Groovy scripts. You can define the URL for TestSuites in project parameters so you can easily point the TestSuite to a different URL or environment. You can define a local MockService to run on your local machine and have it return payloads to the application that you are testing or running. This can be very helpful when you are creating an application for an API that doesn’t exist yet. The drawbacks of SoapUI are the steeper learning curve for getting started compared to Postman. The fact that these capabilities are very useful for local development but not for running the tests automatically in a deployment pipeline or deploying a mock endpoint to a test environment. For more robust repeatable testing in a deployment pipeline, writing test code using C# combined with one of the testing frameworks and Selenium and/or Specflow will give you the most options. However Postman, and for extended capabilities, SoapUI will add a lot of benefits in regards to local and regression testing. Table of contents: Creating and sharing a project Using custom properties SoapUI logging Creating a TestSuite Creating a Mockservice Creating and sharing a project When opening SoapUI, use the Empty button to create a new project. You can right-click the new project in the navigator pane to rename the project and to add a new Rest service from URI (or even a SOAP endpoint with a WSDL) . After creating the project you can add the REST service as shown in the screenshot below. This will create a service with an endpoint in de project to which you can add other endpoints and several different requests per endpoint. Double-click a specific request to open the Request editor to execute the request and view the response. Use the play button to execute the request and view the results on the right side of the window. You may have to select the JSON or HTML tab to see the response. Add extra resources (for example /API/other-path) by right-clicking the service and select the option New Resource. Add extra methods to call the resource for different parameters and HTTP verbs by right-clicking the resource and selecting New Method (or New Child to create a sub-resource and then new Method). Use parentheses like {id} to create a parameter in the path. Add extra requests to a method for different parameter values by right-clicking the method and then choosing the New Request option. For requests using a JSON body be sure to add a Content-Type: application/JSON header to the request to ensure proper interpretation of the body content. To ensure you receive a JSON response when multiple response types are possible add an Accept: application/JSON header to the request. The Request editor contains a header tab to add these headers. See the screenshot below. In the screenshot below, I have added a request for each of the Values controller endpoints to the project in the Navigator pane. The screenshot also shows a POST request and how all the parameters and settings are set in the Request editor. When you have to wish to save the project for sharing right-click the project file in the navigator pane and select the Save Project option. This will save an XML file containing all the data. Be aware that if you set secrets in the requests that these will be embedded into the project file. The project file can be opened using the Import button in the top menu of SoapUI and saved to source control or any collaboration workspace. I have marked both options with a red square in the screenshot below: I have added my SoapUI project file to my WebApi examples GitHub repository and you can try importing and running the collection on a localhost instance of that project. Using custom properties SoapUI allows the use of parameters on several levels to easily switch out the parameter values for the entire project, or just on a request or TestSuite. The parameters or properties can be added to several levels. To see where you can add properties open the properties pane (if it’s not open already) from the left-hand lower side of SoapUI. Whenever the + button is shown you can add your properties or parameters. I like to add environment URLs on the project level. You can assign these to all the requests in the project. When you change the environment parameter used all the requests will execute for the new URL. This makes it easy to switch environments. For example, add the project Custom Properties as shown in the screenshot below. As you can see I reference the environment_local property in the environment property. The environment property will be used in the request templates for all the requests so only the value has to be changed to the correct environment property that you want to use. This way you always have all the environment URLs in one place without having to look them up. To easily assign the environment property to all the requests in the project, double-click the API node to show the Service Viewer. Go to the Service Endpoints tab, change the fixed Endpoint value to the value {#Project#environment}, set the mode to overwrite, and select the Assign button to assign the parameter to all requests in the project. (Double-check with the Request editor to see that the parameter has indeed been assigned correctly). The syntax ${#ParameterLevel#ParameterName} to assign or use a parameter value will work on most input fields within the project. Parameters and properties are also invaluable for TestSuites and TestCases. I will explain these features in a later paragraph. I have added my exported parameterized SoapUI file to my WebApi examples GitHub repository and you can try importing and running the project on a localhost instance of that project. SoapUI logging SoapUI provides several types of logging. The screenshot below shows some of the more useful logs. The Raw tabs for the requests and responses show the actual URL, headers, and response content of the requests. For the request body, view the request tab. As you can see in the Raw tab for the request the URLs have been replaced by the actual values of the parameters for the send request. The HTTP logging provides a text log of all the full requests and responses (though the timestamps and newline characters can make it a bit difficult to read at times). These panes will help you track down the response error codes and understand specific requests that you send using the Request editor. Creating a TestSuite TestSuites are a great tool to define some simple regression tests for your API. Create a new TestSuite from the project context menu. You can add TestCases from the context menu on the new TestSuite. Each test case contains a request or a set of requests that have their responses checked for certain criteria. A test case can be a logical grouping of 1 or several requests with the same purpose like checking certain validation rules. You could define and use repeatable test steps and change certain parameters for the specific case or step. See the Soap UI Docs on modularizing your tests for more guidance. The image below shows a simple TestCase with a simple Assertion. Possible test step types are shown in the screenshot below. The groovy steps provide extensibility by code but it does have a learning curve especially if you are not familiar with the Java programming paradigms. There are already a lot of very usable out-of-the-box assertions like the HTTP code assertions, string/content comparison, JSON path, and JSON regular expressions assertions. Be aware that the free version of SoapUI has limitations (as seen for all the greyed out options). You can easily use the SoapUI menus on either the project to run all TestCases, a single TestSuite, or even a single TestStep with a few simple clicks. Even if you just run these regression tests locally and keep the project file with the codebase you will always have a quick tool to verify whether or not everything is working as intended and even testers that don’t have a test automation background can maintain and extend these projects. SoapUI also has possibilities for security tests, load tests, and documenting manual test steps for an API. Please see the SoapUI docs linked in the previous sentence for more information on those. Creating a Mockservice A MockService is a simple local web service that is started at a certain address. You can tell the service on which endpoints to listen for requests and what responses to send back. This is a great tool when developing a consuming application where the endpoints do not yet exist or to test certain behavior (error responses) from those endpoints. To create a MockService, again use the context menu on the project node in the navigation pane. The local URL at which the MockService is run can be changed from the settings. Now you can add an endpoint (mock action) through the context menu on the MockService. Omit all the query parameters from the endpoint path and set the path parameter to a fixed value. There are ways to add scripts to the MockService so it responds more dynamically to path parameters to return a proper response. See the SoapUI docs on creating dynamic MockServices for more information. You can define the HTTP status code and the response body for the mock endpoint in the editor. The MockService responses allow you to define sequences of responses so (for the first response define a response message and for all subsequent responses define a very different response). Double-click the mock action to find and change the Dispatch options. The default is Sequence, meaning that all the responses are returned in order and the last response is repeated until the service is stopped or started. When a MockService is started you can still edit the responses and status codes while it’s running. SoapUI will return the newly changed response without restarting the MockService first. Be aware that when consuming the MockService from a local browser that you may have to add extra CORS endpoints to ensure the browser’s security to make the requests. See this Medium article on how to handle CORS from a MockService.</summary></entry><entry><title type="html">Using Postman for quick and repeatable API tests</title><link href="https://samanthaneilen.github.io/2020/06/29/Using-Postman-for-quick-and-repeatable-API-tests.html" rel="alternate" type="text/html" title="Using Postman for quick and repeatable API tests" /><published>2020-06-29T01:00:00+02:00</published><updated>2020-06-29T01:00:00+02:00</updated><id>https://samanthaneilen.github.io/2020/06/29/Using-Postman-for-quick-and-repeatable-API-tests</id><content type="html" xml:base="https://samanthaneilen.github.io/2020/06/29/Using-Postman-for-quick-and-repeatable-API-tests.html">&lt;p&gt;Postman is an API tool that is great for setting up repeatable calls to a REST web service in a short amount of time. When developing an API it’s a good way to check if the API works as expected and saves time in setting up calls every time. Using environment parameters you can also quickly replay the requests on different environments with different parameters. The export functions allow you to store collections and environment files in source control as needed. Using a low-code tool also has the benefit of sharing the calls and files with non-technical testers.&lt;/p&gt;

&lt;p&gt;The tool has support for mock API and automated testing but these features require an account and the use of a paid license. When I need those features I usually switch to SoapUI another API testing tool that provides those features for free with no account needed. I will write an article on SoapUI at a later time. SoapUI also provides support for WCF services while Postman focusses on REST calls.&lt;/p&gt;

&lt;p&gt;Due to ease of use and sharing Postman does have my preference over SoapUI until I find I need WCF calls, local mock services, or automated test cases.&lt;/p&gt;

&lt;p&gt;More information on &lt;a href=&quot;https://www.postman.com/&quot;&gt;Postman features&lt;/a&gt; and pricing see the Postman site. You can also download the tool from that website and install it. On the first startup, it will show a dialog prompting to sign in but there is a small skip sign-in link in the pop-up if you do not wish to set up yet another account for a new service.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of contents:&lt;/strong&gt;&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#creating-and-sharing-collections&quot; id=&quot;markdown-toc-creating-and-sharing-collections&quot;&gt;Creating and sharing collections&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#using-environments-and-parameters&quot; id=&quot;markdown-toc-using-environments-and-parameters&quot;&gt;Using environments and parameters&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#using-a-pre-request-script-to-fetch-a-bearer-token-for-authorization-use-cases&quot; id=&quot;markdown-toc-using-a-pre-request-script-to-fetch-a-bearer-token-for-authorization-use-cases&quot;&gt;Using a pre-request script to fetch a bearer token for authorization use cases&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#postman-console&quot; id=&quot;markdown-toc-postman-console&quot;&gt;Postman console&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#exporting-postman-requests-as-code&quot; id=&quot;markdown-toc-exporting-postman-requests-as-code&quot;&gt;Exporting postman requests as code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tip-for-seeing-and-replaying-a-browser-request&quot; id=&quot;markdown-toc-tip-for-seeing-and-replaying-a-browser-request&quot;&gt;Tip for seeing and replaying a browser request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;creating-and-sharing-collections&quot;&gt;Creating and sharing collections&lt;/h3&gt;

&lt;p&gt;When opening Postman, go to the collections tab and create a new collection. This will create a folder to group requests. It will also allow you to set up certain shared settings like authorization, pre-requests scripts, tests, and variables as can be seen in de screenshot below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/CreateCollection.png&quot; alt=&quot;[Create collection]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I have added &lt;a href=&quot;https://github.com/SamanthaNeilen/WebApiExamples/blob/api_test_tools/NetCore.WebApiExample/Controllers/ValuesController.cs&quot;&gt;a simple values controller to my WebApi examples project&lt;/a&gt; as shown below.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-C#&quot;&gt;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;

namespace NetCore.WebApiExample.Controllers
{
    [Route(&quot;api/[controller]&quot;)]
    [ApiController]
    public class ValuesController : ControllerBase
    {
        [HttpGet]
        public IActionResult Get()
        {
            return Ok(new [] {&quot;value1&quot;, &quot;value2&quot;});
        }

        [HttpGet(&quot;{id}&quot;)]
        public IActionResult Get(int id)
        {
            return Ok($&quot;Requested id: {id}&quot;);
        }

        [HttpPost]
        public IActionResult PostObjectParameter([FromBody] KeyValuePair&amp;lt;int,string&amp;gt; keyValuePair)
        {
            return Ok($&quot;Posted values {keyValuePair}&quot;);
        }
        
        [HttpPost(&quot;{id}&quot;)]
        public IActionResult PostValueTypeParameter([FromRoute]int id, [FromBody] KeyValuePair&amp;lt;string,string&amp;gt; value)
        {
            return Ok($&quot;Posted values {{ id: {id}, value: {value} }}&quot;);
        }
    }
}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;A screenshot listing the requests within postman and the post for the api/values/{id} endpoint is shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/CollectionOverview.png&quot; alt=&quot;[Collection requests and POST example]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;For requests using a JSON body be sure to add a Content-Type: application/json header to the request to ensure proper interpretation of the body content.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/RequestHeaders.png&quot; alt=&quot;[Request headers]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Postman will add this header automatically when selecting the JSON content-type from the drop-down when using a raw body.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/BodyContentType.png&quot; alt=&quot;[Body content type dropdown]&quot; /&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;When calling an endpoint protected by authentication/authorization you can either add an Authorization header to the headers tab or use the Authorization tab to fill the header using parameters related to the Authorization method:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/AuthorizationList.png&quot; alt=&quot;[Authorization tab dropdown]&quot; /&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;When you have to wish to save the collection for sharing click the collection context menu and choose export. This will export a JSON file containing all the data. Be aware that if you set secrets in the requests that these will be embedded into the collection file.&lt;/p&gt;

&lt;p&gt;The collection export file can be imported using the Import function in the top menu of Postman and saved to source control or any collaboration workspace.&lt;/p&gt;

&lt;p&gt;I have marked both options with a red square in the screenshot below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/ImportAndExportCollection.png&quot; alt=&quot;[Import and export collection]&quot; /&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I have added my &lt;a href=&quot;https://github.com/SamanthaNeilen/WebApiExamples/blob/api_test_tools/Test%20files/NetCore%20WebApi%20Examples.postman_collection(no_parameters).json&quot;&gt;exported postman collection file to my WebApi examples GitHub repository&lt;/a&gt; and you can try importing and running the collection on a localhost instance of that project.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;using-environments-and-parameters&quot;&gt;Using environments and parameters&lt;/h3&gt;

&lt;p&gt;Postman allows the use of parameters and uses environments to easily switch out the parameter value. You can create a file for a local and hosted environment containing the host URL as a parameter.&lt;/p&gt;

&lt;p&gt;To do this first create environments using the “Manage environment” option as shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/ManageEnvironment.png&quot; alt=&quot;[Manage environment]&quot; /&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/CreateEnvironment.png&quot; alt=&quot;[Create environment]&quot; /&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Next change the host URL in the request to use a parameter placeholder so Postman knows where to replace the variable. Be sure to set the active environment to ensure the parameter is bound to the correct value. The variables can be embedded in the URL or any of the request parameter tabs (authorization, headers, body) as shown in the screenshots below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/ParameterizedRequest.png&quot; alt=&quot;[Parameterized request]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Environments can also be exported using the download option in the Manage environment pop-up.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/DownloadEnvironment.png&quot; alt=&quot;[Download environment]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The import function in the top left side of Postman can be used for either importing environment or collection files.&lt;/p&gt;

&lt;p&gt;I have added &lt;a href=&quot;https://github.com/SamanthaNeilen/WebApiExamples/blob/api_test_tools/Test%20files/Local%20NetCore%20WebApiExamples.postman_environment.json&quot;&gt;my exported parameterized postman collection file&lt;/a&gt; and &lt;a href=&quot;https://github.com/SamanthaNeilen/WebApiExamples/blob/api_test_tools/Test%20files/Local%20NetCore%20WebApiExamples.postman_environment.json&quot;&gt;local environment file&lt;/a&gt; to my WebApi examples GitHub repository and you can try importing and running the collection on a localhost instance of that project.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;using-a-pre-request-script-to-fetch-a-bearer-token-for-authorization-use-cases&quot;&gt;Using a pre-request script to fetch a bearer token for authorization use cases&lt;/h3&gt;

&lt;p&gt;When using OAUTH2 authorization, you can use the pre-requests script on a collection to call a script to fill a variable with a valid token. This will ensure you can always just run the request and not have to worry about retrieving a valid authorization token every time.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/bcnzer/073f0fc0b959928b0ca2b173230c0669&quot;&gt;A basic script by Ben Chartrand can be found on Github.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Be aware that when exporting environment files or postman collections that hard-coded settings and secrets will be exported in the files. In the uploaded files I have created placeholders for the secrets and specific instance settings that correspond with the placeholders in the WebApi configuration files.&lt;/p&gt;

&lt;p&gt;The pre-request script for a collection can be found using the Edit collection context menu setting and then selecting the pre-request script tab.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/EditCollectionPreRequestScript.png&quot; alt=&quot;[Edit collection option and pre-request script tab]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;postman-console&quot;&gt;Postman console&lt;/h3&gt;

&lt;p&gt;Postman console is a useful feature for troubleshooting and sharing raw requests made by Postman and can be found in the bottom left of the application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/PostmanConsole.png&quot; alt=&quot;[Postman console option]&quot; /&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You can inspect the requests made and via the “show raw log” option can change the format to the actual HTTP call that has been sent. The raw format is great for sharing tool independent requests/responses to for example an API vendor for troubleshooting. (Again be aware of any secrets embedded in your requests/responses when sharing this information)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;exporting-postman-requests-as-code&quot;&gt;Exporting postman requests as code&lt;/h3&gt;

&lt;p&gt;Besides sharing the raw requests logged in Postman console you can also share requests by exporting a request as code using the code option below the Save button on a request.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/GenerateCode.png&quot; alt=&quot;[Generate code option]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;tip-for-seeing-and-replaying-a-browser-request&quot;&gt;Tip for seeing and replaying a browser request&lt;/h3&gt;

&lt;p&gt;If you have a web application in a browser that calls an API you can usually use the network tab of the developer tools to inspect requests made from the browser to your API. &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200629/BrowserNetworkTabRequestDetails.png&quot; alt=&quot;[Browser - network tab - request details]&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;By copying the headers and body for the request to a postman request you can easily replay, edit, and troubleshoot a request without constantly having to fill-out webforms.&lt;/p&gt;</content><author><name></name></author><category term="WebAPI" /><summary type="html">Postman is an API tool that is great for setting up repeatable calls to a REST web service in a short amount of time. When developing an API it’s a good way to check if the API works as expected and saves time in setting up calls every time. Using environment parameters you can also quickly replay the requests on different environments with different parameters. The export functions allow you to store collections and environment files in source control as needed. Using a low-code tool also has the benefit of sharing the calls and files with non-technical testers. The tool has support for mock API and automated testing but these features require an account and the use of a paid license. When I need those features I usually switch to SoapUI another API testing tool that provides those features for free with no account needed. I will write an article on SoapUI at a later time. SoapUI also provides support for WCF services while Postman focusses on REST calls. Due to ease of use and sharing Postman does have my preference over SoapUI until I find I need WCF calls, local mock services, or automated test cases. More information on Postman features and pricing see the Postman site. You can also download the tool from that website and install it. On the first startup, it will show a dialog prompting to sign in but there is a small skip sign-in link in the pop-up if you do not wish to set up yet another account for a new service. Table of contents: Creating and sharing collections Using environments and parameters Using a pre-request script to fetch a bearer token for authorization use cases Postman console Exporting postman requests as code Tip for seeing and replaying a browser request Creating and sharing collections When opening Postman, go to the collections tab and create a new collection. This will create a folder to group requests. It will also allow you to set up certain shared settings like authorization, pre-requests scripts, tests, and variables as can be seen in de screenshot below. I have added a simple values controller to my WebApi examples project as shown below. using Microsoft.AspNetCore.Mvc; using System.Collections.Generic; namespace NetCore.WebApiExample.Controllers { [Route(&quot;api/[controller]&quot;)] [ApiController] public class ValuesController : ControllerBase { [HttpGet] public IActionResult Get() { return Ok(new [] {&quot;value1&quot;, &quot;value2&quot;}); } [HttpGet(&quot;{id}&quot;)] public IActionResult Get(int id) { return Ok($&quot;Requested id: {id}&quot;); } [HttpPost] public IActionResult PostObjectParameter([FromBody] KeyValuePair&amp;lt;int,string&amp;gt; keyValuePair) { return Ok($&quot;Posted values {keyValuePair}&quot;); } [HttpPost(&quot;{id}&quot;)] public IActionResult PostValueTypeParameter([FromRoute]int id, [FromBody] KeyValuePair&amp;lt;string,string&amp;gt; value) { return Ok($&quot;Posted values {{ id: {id}, value: {value} }}&quot;); } } } A screenshot listing the requests within postman and the post for the api/values/{id} endpoint is shown below. For requests using a JSON body be sure to add a Content-Type: application/json header to the request to ensure proper interpretation of the body content. Postman will add this header automatically when selecting the JSON content-type from the drop-down when using a raw body. When calling an endpoint protected by authentication/authorization you can either add an Authorization header to the headers tab or use the Authorization tab to fill the header using parameters related to the Authorization method: When you have to wish to save the collection for sharing click the collection context menu and choose export. This will export a JSON file containing all the data. Be aware that if you set secrets in the requests that these will be embedded into the collection file. The collection export file can be imported using the Import function in the top menu of Postman and saved to source control or any collaboration workspace. I have marked both options with a red square in the screenshot below: I have added my exported postman collection file to my WebApi examples GitHub repository and you can try importing and running the collection on a localhost instance of that project. Using environments and parameters Postman allows the use of parameters and uses environments to easily switch out the parameter value. You can create a file for a local and hosted environment containing the host URL as a parameter. To do this first create environments using the “Manage environment” option as shown below. Next change the host URL in the request to use a parameter placeholder so Postman knows where to replace the variable. Be sure to set the active environment to ensure the parameter is bound to the correct value. The variables can be embedded in the URL or any of the request parameter tabs (authorization, headers, body) as shown in the screenshots below. Environments can also be exported using the download option in the Manage environment pop-up. The import function in the top left side of Postman can be used for either importing environment or collection files. I have added my exported parameterized postman collection file and local environment file to my WebApi examples GitHub repository and you can try importing and running the collection on a localhost instance of that project. Using a pre-request script to fetch a bearer token for authorization use cases When using OAUTH2 authorization, you can use the pre-requests script on a collection to call a script to fill a variable with a valid token. This will ensure you can always just run the request and not have to worry about retrieving a valid authorization token every time. A basic script by Ben Chartrand can be found on Github. Be aware that when exporting environment files or postman collections that hard-coded settings and secrets will be exported in the files. In the uploaded files I have created placeholders for the secrets and specific instance settings that correspond with the placeholders in the WebApi configuration files. The pre-request script for a collection can be found using the Edit collection context menu setting and then selecting the pre-request script tab. Postman console Postman console is a useful feature for troubleshooting and sharing raw requests made by Postman and can be found in the bottom left of the application. You can inspect the requests made and via the “show raw log” option can change the format to the actual HTTP call that has been sent. The raw format is great for sharing tool independent requests/responses to for example an API vendor for troubleshooting. (Again be aware of any secrets embedded in your requests/responses when sharing this information) Exporting postman requests as code Besides sharing the raw requests logged in Postman console you can also share requests by exporting a request as code using the code option below the Save button on a request. Tip for seeing and replaying a browser request If you have a web application in a browser that calls an API you can usually use the network tab of the developer tools to inspect requests made from the browser to your API. By copying the headers and body for the request to a postman request you can easily replay, edit, and troubleshoot a request without constantly having to fill-out webforms.</summary></entry><entry><title type="html">Calling async methods with ConfigureAwait</title><link href="https://samanthaneilen.github.io/2020/05/04/Calling-async-methods-with-configureawait.html" rel="alternate" type="text/html" title="Calling async methods with ConfigureAwait" /><published>2020-05-04T01:00:00+02:00</published><updated>2020-05-04T01:00:00+02:00</updated><id>https://samanthaneilen.github.io/2020/05/04/Calling-async-methods-with-configureawait</id><content type="html" xml:base="https://samanthaneilen.github.io/2020/05/04/Calling-async-methods-with-configureawait.html">&lt;p&gt;When I started using SonarQube/SonarLint to improve code quality it made me aware of using the ConfigureAwait method available on any async method call. The linting rule defines:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;After an &lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt;ed &lt;code class=&quot;highlighter-rouge&quot;&gt;Task&lt;/code&gt; has executed, you can continue execution in the original, calling thread or any arbitrary thread. Unless the rest of the code needs the context from which the &lt;code class=&quot;highlighter-rouge&quot;&gt;Task&lt;/code&gt; was spawned, &lt;code class=&quot;highlighter-rouge&quot;&gt;Task.ConfigureAwait(false)&lt;/code&gt; should be used to keep execution in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Task&lt;/code&gt; thread to avoid the need for context switching and the possibility of deadlocks.&lt;/p&gt;

  &lt;p&gt;This rule raises an issue when code in a class library &lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt;s a &lt;code class=&quot;highlighter-rouge&quot;&gt;Task&lt;/code&gt; and continues execution in the original calling thread.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://rules.sonarsource.com/csharp/RSPEC-3216&quot;&gt;quoted from: sonarsource.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this post, I will take little dive into asynchronous programming and refer to relevant resources to look at. After that, I will explain the usage of the ConfigureAwait method.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of contents:&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-asynchronous-programming&quot; id=&quot;markdown-toc-what-is-asynchronous-programming&quot;&gt;What is asynchronous programming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#the-task-based-asynchronous-pattern-tap&quot; id=&quot;markdown-toc-the-task-based-asynchronous-pattern-tap&quot;&gt;The Task-based Asynchronous Pattern (TAP)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#using-configureawait&quot; id=&quot;markdown-toc-using-configureawait&quot;&gt;Using ConfigureAwait&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;what-is-asynchronous-programming&quot;&gt;What is asynchronous programming&lt;/h3&gt;

&lt;p&gt;If you are not very familiar with asynchronous programming I would advise you to look into the high-level explanations found in the Microsoft Docs articles below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/&quot;&gt;Asynchronous programming with async and await&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/async-in-depth&quot;&gt;Async in depth&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My summary for these articles is:&lt;/p&gt;

&lt;p&gt;A single method call chain in your program when called synchronously is executed on 1 thread. If the code has to wait for an external call handled by the operating system (accessing a disk or network resource) that single thread will stay idle and wait for that external call to finish then resume its work.&lt;/p&gt;

&lt;p&gt;When using asynchronous programming you allow the call chain execution to be paused and free up the thread for other work while waiting for the response of an external or long-running call. This allows the software or system that runs the software to complete more work and utilize it’s resources more efficiently.&lt;/p&gt;

&lt;p&gt;Another great article on Microsoft Docs is “https://docs.microsoft.com/en-us/dotnet/csharp/async” that explains how to identify situations in which asynchronous programming is especially helpful. Also, be aware of the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/async#important-info-and-advice&quot;&gt;“Important info and advice&lt;/a&gt;” section in that article for some extra tips even if you already know and use asynchronous programming.&lt;/p&gt;

&lt;h3 id=&quot;the-task-based-asynchronous-pattern-tap&quot;&gt;The Task-based Asynchronous Pattern (TAP)&lt;/h3&gt;

&lt;p&gt;.NET Framework 4 and above (including .NET Core) use the Task-based Asynchronous Pattern (TAP) for writing asynchronous code. There &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap&quot;&gt;are in-depth and concrete articles for Task-based asynchronous pattern (TAP)&lt;/a&gt; on how to use the Task-based Asynchronous Pattern in C#. You can also find explanations on the “Legacy” asynchronous patterns used in the .NET framework using the left-hand content menu.&lt;/p&gt;

&lt;p&gt;The “&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/consuming-the-task-based-asynchronous-pattern&quot;&gt;Consuming the Task-based Asynchronous Pattern&lt;/a&gt;” contains an explanation on how to consume asynchronous methods. This information is good to know as more and more methods of the .NET framework are starting to become asynchronous methods. This article also contains &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/consuming-the-task-based-asynchronous-pattern#configuring-suspension-and-resumption-with-yield-and-configureawait&quot;&gt;an explanation for the ConfigureAwait method&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;using-configureawait&quot;&gt;Using ConfigureAwait&lt;/h3&gt;

&lt;p&gt;As stated in the last paragraph the section in “&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/consuming-the-task-based-asynchronous-pattern&quot;&gt;Consuming the Task-based Asynchronous Pattern&lt;/a&gt;” explaining the ConfigureAwait is “&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/consuming-the-task-based-asynchronous-pattern#configuring-suspension-and-resumption-with-yield-and-configureawait&quot;&gt;Configuring Suspension and Resumption with Yield and ConfigureAwait&lt;/a&gt;”.&lt;/p&gt;

&lt;p&gt;It explains that when resuming work after an await, the default behavior is to resume work on the original thread that was paused. If you do not explicitly use the ConfigureAwait method the default behavior will be the same as ConfigureAwait(true).&lt;/p&gt;

&lt;p&gt;When using asynchronous methods in a web application this default behavior allows you to retain the value certain variables like for example the HttpContext variable after an awaited method.&lt;/p&gt;

&lt;p&gt;If you have no need for these values (or capture all the values on entry and hand them off to your asynchronous code) you can use ConfigureAwait(false). This will allow the continuation of execution on any thread and allows the system to improve its scheduling of work on the available threads. As stated in the SonarQube rule listed at the start of the article this may also prevent certain deadlock scenarios.&lt;/p&gt;

&lt;p&gt;However, be aware that when introducing ConfigureAwait(false) that you may lose some context variables and get some unexplainable null reference exceptions if the code is expecting those variables to still have a value.&lt;/p&gt;

&lt;p&gt;There is a great &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/configureawait-faq/&quot;&gt;Microsoft developer blogpost&lt;/a&gt; with extra useful information and a FAQ section about the usage of ConfigureAwait. It has a more in-depth explanation of how to use ConfigureAwait.&lt;/p&gt;</content><author><name></name></author><category term="Async" /><summary type="html">When I started using SonarQube/SonarLint to improve code quality it made me aware of using the ConfigureAwait method available on any async method call. The linting rule defines: After an awaited Task has executed, you can continue execution in the original, calling thread or any arbitrary thread. Unless the rest of the code needs the context from which the Task was spawned, Task.ConfigureAwait(false) should be used to keep execution in the Task thread to avoid the need for context switching and the possibility of deadlocks. This rule raises an issue when code in a class library awaits a Task and continues execution in the original calling thread. quoted from: sonarsource.com In this post, I will take little dive into asynchronous programming and refer to relevant resources to look at. After that, I will explain the usage of the ConfigureAwait method. Table of contents: What is asynchronous programming The Task-based Asynchronous Pattern (TAP) Using ConfigureAwait What is asynchronous programming If you are not very familiar with asynchronous programming I would advise you to look into the high-level explanations found in the Microsoft Docs articles below. Asynchronous programming with async and await Async in depth My summary for these articles is: A single method call chain in your program when called synchronously is executed on 1 thread. If the code has to wait for an external call handled by the operating system (accessing a disk or network resource) that single thread will stay idle and wait for that external call to finish then resume its work. When using asynchronous programming you allow the call chain execution to be paused and free up the thread for other work while waiting for the response of an external or long-running call. This allows the software or system that runs the software to complete more work and utilize it’s resources more efficiently. Another great article on Microsoft Docs is “https://docs.microsoft.com/en-us/dotnet/csharp/async” that explains how to identify situations in which asynchronous programming is especially helpful. Also, be aware of the “Important info and advice” section in that article for some extra tips even if you already know and use asynchronous programming. The Task-based Asynchronous Pattern (TAP) .NET Framework 4 and above (including .NET Core) use the Task-based Asynchronous Pattern (TAP) for writing asynchronous code. There are in-depth and concrete articles for Task-based asynchronous pattern (TAP) on how to use the Task-based Asynchronous Pattern in C#. You can also find explanations on the “Legacy” asynchronous patterns used in the .NET framework using the left-hand content menu. The “Consuming the Task-based Asynchronous Pattern” contains an explanation on how to consume asynchronous methods. This information is good to know as more and more methods of the .NET framework are starting to become asynchronous methods. This article also contains an explanation for the ConfigureAwait method. Using ConfigureAwait As stated in the last paragraph the section in “Consuming the Task-based Asynchronous Pattern” explaining the ConfigureAwait is “Configuring Suspension and Resumption with Yield and ConfigureAwait”. It explains that when resuming work after an await, the default behavior is to resume work on the original thread that was paused. If you do not explicitly use the ConfigureAwait method the default behavior will be the same as ConfigureAwait(true). When using asynchronous methods in a web application this default behavior allows you to retain the value certain variables like for example the HttpContext variable after an awaited method. If you have no need for these values (or capture all the values on entry and hand them off to your asynchronous code) you can use ConfigureAwait(false). This will allow the continuation of execution on any thread and allows the system to improve its scheduling of work on the available threads. As stated in the SonarQube rule listed at the start of the article this may also prevent certain deadlock scenarios. However, be aware that when introducing ConfigureAwait(false) that you may lose some context variables and get some unexplainable null reference exceptions if the code is expecting those variables to still have a value. There is a great Microsoft developer blogpost with extra useful information and a FAQ section about the usage of ConfigureAwait. It has a more in-depth explanation of how to use ConfigureAwait.</summary></entry><entry><title type="html">Tips for building habits around working from home</title><link href="https://samanthaneilen.github.io/2020/03/18/Tips-for-building-habits-around-working-from-home.html" rel="alternate" type="text/html" title="Tips for building habits around working from home" /><published>2020-03-18T00:00:00+01:00</published><updated>2020-03-18T00:00:00+01:00</updated><id>https://samanthaneilen.github.io/2020/03/18/Tips-for-building-habits-around-working-from-home</id><content type="html" xml:base="https://samanthaneilen.github.io/2020/03/18/Tips-for-building-habits-around-working-from-home.html">&lt;p&gt;What helps me stay focused when working from home is keeping the same schedule (and thus my habits around that schedule) and building the mental model of “working time” and “home time”. Just a disclaimer: I don’t have kids or pets that don’t understand and will probably disrupt these habits and mental models.&lt;/p&gt;

&lt;p&gt;For me this means:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Waking up at 5-6 am to get an hour of study before I would regularly leave for work.&lt;/li&gt;
  &lt;li&gt;Instead of leaving for work simulate my commute by exercising for half an hour. Preferably a walk outside&lt;/li&gt;
  &lt;li&gt;Have a fixed working space in the house to get in the mindset that being there is being “at work”&lt;/li&gt;
  &lt;li&gt;Start working at your regular staring time&lt;/li&gt;
  &lt;li&gt;Keep the same eating, drinking and break habits you would have in the office (for my this is regulating my caffeine and not over caffeinating, have just my regular sandwich and apple for lunch at my desk followed by a half-hour exercise moment)&lt;/li&gt;
  &lt;li&gt;Don’t overeat or crash on the couch in front of the television during lunch to keep fit and motivated for the afternoon.&lt;/li&gt;
  &lt;li&gt;Try not to do any chores during “work hours” to keep that in-office mindset&lt;/li&gt;
  &lt;li&gt;Stop working at the same time you regularly leave for home (working long hours will probably make you less effective and burn you out in the long run)&lt;/li&gt;
  &lt;li&gt;Go to bed a the same time as you would on a regular working day&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some recent podcasts about the same subject for more tips and stories&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://spec.fm/podcasts/developer-tea/317916&quot;&gt;Developer tea - Hidden Environment Inputs - Mindful Remote Work&lt;/a&gt;  (be sure to check out the other episodes for this podcast. It’s a treasure trove on episodes about habit building and mindfulness in your work)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hanselminutes.com/723/surviving-as-a-remote-tech-employee-with-jayson&quot;&gt;Hanselminutes - Surviving as a remote tech employee with Jayson J. Phillips&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ladybug.dev/working-remotely&quot;&gt;Ladybug podcast – working remotely&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">What helps me stay focused when working from home is keeping the same schedule (and thus my habits around that schedule) and building the mental model of “working time” and “home time”. Just a disclaimer: I don’t have kids or pets that don’t understand and will probably disrupt these habits and mental models. For me this means: Waking up at 5-6 am to get an hour of study before I would regularly leave for work. Instead of leaving for work simulate my commute by exercising for half an hour. Preferably a walk outside Have a fixed working space in the house to get in the mindset that being there is being “at work” Start working at your regular staring time Keep the same eating, drinking and break habits you would have in the office (for my this is regulating my caffeine and not over caffeinating, have just my regular sandwich and apple for lunch at my desk followed by a half-hour exercise moment) Don’t overeat or crash on the couch in front of the television during lunch to keep fit and motivated for the afternoon. Try not to do any chores during “work hours” to keep that in-office mindset Stop working at the same time you regularly leave for home (working long hours will probably make you less effective and burn you out in the long run) Go to bed a the same time as you would on a regular working day Some recent podcasts about the same subject for more tips and stories Developer tea - Hidden Environment Inputs - Mindful Remote Work (be sure to check out the other episodes for this podcast. It’s a treasure trove on episodes about habit building and mindfulness in your work) Hanselminutes - Surviving as a remote tech employee with Jayson J. Phillips Ladybug podcast – working remotely</summary></entry><entry><title type="html">Unit testing self-executing JavaScript modules in Visual Studio</title><link href="https://samanthaneilen.github.io/2020/02/08/Unit-testing-self-executing-JavaScript-Modules-in-Visual-Studio.html" rel="alternate" type="text/html" title="Unit testing self-executing JavaScript modules in Visual Studio" /><published>2020-02-08T00:00:00+01:00</published><updated>2020-02-08T00:00:00+01:00</updated><id>https://samanthaneilen.github.io/2020/02/08/Unit-testing-self-executing-JavaScript-Modules-in-Visual-Studio</id><content type="html" xml:base="https://samanthaneilen.github.io/2020/02/08/Unit-testing-self-executing-JavaScript-Modules-in-Visual-Studio.html">&lt;p&gt;Visual Studio has support for unit tests in the Test Explorer window so you can run all your C# and JavaScript tests from that editor. A separate Node project can contain al the test code separate from the code that gets published and deployed. It is possible to include the tests in the web project itself. See &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/javascript/unit-testing-javascript-with-visual-studio?view=vs-2019#unit-tests-in-other-project-types&quot;&gt;the Microsoft Docs page on Unit testing JavaScript and TypeScript in Visual Studio&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;This post is a continuation of my post about &lt;a href=&quot;https://samanthaneilen.github.io/2019/12/30/Creating-more-maintainable-javascript-with-self-executing-functions.html&quot;&gt;Creating more maintainable JavaScript with self-executing functions&lt;/a&gt;. I will continue building on the JavaScriptModules project presented in that post. A working Visual Studio project with the code can be found in my &lt;a href=&quot;https://github.com/SamanthaNeilen/JavascriptModulesExamples&quot;&gt;JavaScriptModuleExamples repository on GitHub&lt;/a&gt;.
 If you use the project from GitHub be sure to follow to ReadMe.md on the repository for additional steps to see the tests in Visual Studio Test Explorer.&lt;/p&gt;

&lt;p&gt;The befits of writing these JavaScript unit tests are getting earlier feedback about the state of your JavaScript without writing more fragile and slower integration tests. The unit tests can also be run in the build pipeline next to your regular unit tests using an npm test command step before deploying to an environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of contents:&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#setup-a-nodejs-test-project&quot; id=&quot;markdown-toc-setup-a-nodejs-test-project&quot;&gt;Setup a Node.Js Test project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#writing-tests&quot; id=&quot;markdown-toc-writing-tests&quot;&gt;Writing tests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#resources&quot; id=&quot;markdown-toc-resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;setup-a-nodejs-test-project&quot;&gt;Setup a Node.Js Test project&lt;/h3&gt;

&lt;p&gt;So to start testing, add a Blank Node.js Console Application project. You need to have the Node.js workload installed in Visual Studio. When you add a new file to the project via the “Add -&amp;gt; New Item” context menu, you can see the test frameworks that Visual Studio already provides a template file for. The template file contains a passing test and a failing test showing the syntax for basic tests.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200208/JavaScriptUnitTestFileTemplates.png&quot; alt=&quot;[JavaScript unit test file templates]&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/welldone-software/an-overview-of-javascript-testing-in-2019-264e19514d0a&quot;&gt;An article comparing several of the different JavaScript frameworks can be found on Medium.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will be working with the Jest framework in this post, so add a Jest test file. The contents for the default new Jest file is shown below.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Test Suite 1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Test 1 - This shouldn't fail&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBeTruthy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Test 2 - This should fail'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBeTruthy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &quot;This shouldn't fail&quot;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBeTruthy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To run the tests using Visual Studio Test you need to set the “JavaScript Unit Test” properties in the project properties and install the jest and jest-editor-support npm packages.&lt;/p&gt;

&lt;p&gt;For the “JavaScript Unit Tests” properties set the “Test Framework” to the framework of choice (Jest, in my case) and set the Test Root to a “Tests” subfolder. Using a subfolder will ensure that you can add extra folders with builder and helper classes without them being seen as potential unit test files.&lt;/p&gt;

&lt;p&gt;Now the tests will show up in Test Explorer after building the project. You may have to restart Visual Studio the first time before any tests show up. Also to ensure running or debugging the latest version of your tests you always need to build before running a test via Test Explorer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200208/FirstTestsLoadedInTestExplorer.png&quot; alt=&quot;[First tests loaded in Test Explorer]&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;writing-tests&quot;&gt;Writing tests&lt;/h3&gt;

&lt;p&gt;To start testing the customer-overview.js file from the JavaScriptModules web project we first have to hookup some dependencies and mocks. We need jQuery, a mock of our customer-service.js and the HTML or DOM setup that the module can interact with.&lt;/p&gt;

&lt;p&gt;First, add a testutilities.js file that will set up a module that has the link to the wwwroot of our project under test and loads in 3rd party libraries needed for testing. The module is shown below.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wwwRootScriptsFolder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../JavaScriptModules/wwwroot/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wwwRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wwwRootScriptsFolder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wwwRootScriptsFolder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lib/jquery/jquery.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TestUtilitiesModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we can use the TestUtilities module in the test file to do a simple test using jQuery. This example also shows how to declare some HTML to interact with. The document is actually a mock provided by the test framework. Any interactions your code and modules have with the window or document will work as expected.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Test Suite 1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;beforeEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;jest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resetModules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'../TestUtilities.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TestUtilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'label'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'myLabel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Test 1 - This shouldn't fail&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#myLabel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toHaveLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Test 2 - This should fail'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBeTruthy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &quot;This shouldn't fail&quot;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBeTruthy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If you run the test in debugging mode, you can stop and inspect the variables and DOM.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200208/DebugTest.png&quot; alt=&quot;[Debugging JavaScript test]&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, we want to build the HTML template for the initial page for the module under test. I usually create a module using &lt;a href=&quot;https://en.wikipedia.org/wiki/Builder_pattern&quot;&gt;the builder pattern&lt;/a&gt; to be able to create the template in a fluent syntax. This way you can use the builder in your tests to create multiple starting HTML situations with expressive and readable syntax. The builder and the test file using the builder are shown below. Not that in the builder below I only add the required elements to check my logic. All elements that are for layout and not functionality are omitted. (The code below can be also be found in my GitHub repo under the tag: V1.3-first-test-module-using-HTML-builder &lt;a href=&quot;https://github.com/SamanthaNeilen/JavascriptModulesExamples/tree/V1.3-first-test-module-using-HTML-builder&quot;&gt;my GitHub repo under the tag: V1.3-first-test-module-using-HTML-builder&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;(Also note that the code shown is a refinement of multiple times writing, evaluating, refactoring and running and reading the tests iterations. If your logic and HTML are simple you may not even these builders to write a few simple tests.)&lt;/p&gt;

&lt;p&gt;UnitTest.js:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Search using Name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;beforeEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testProjectRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../../../'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;jest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resetModules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;testProjectRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TestUtilities.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TestUtilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;testProjectRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Builders/CustomerOverviewHtmlBuilder.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wwwRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testProjectRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TestUtilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wwwRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wwwRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'js/utilities.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wwwRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'js/customer-overview.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//arrange initial state&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;htmlTemplate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerOverviewHtmlBuilderModule&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearDataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hideLoadingRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withDataRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'first customer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'first customer email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'first customer country'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withDataRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'second customer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'second customer email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'second customer country'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withDataRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'testcustomer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcustomer email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcustomer country'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;htmlTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;WHEN 3 rows loaded THEN Search with full Name SHOULD filter to show one row&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//arrange&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchNameValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'second customer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialVisibleRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialInvisibleRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getInvisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//act&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#searchCustomerName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchNameValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerOverviewModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filterData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//assert intial state&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialVisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toHaveLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialInvisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toHaveLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//assert state after action&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filteredVisibleRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filteredInvisibleRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getInvisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filteredVisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toHaveLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filteredInvisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toHaveLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actualVisibleRowSearchName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getSearchNameValueForSingleRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filteredVisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;actualVisibleRowSearchName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchNameValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getSearchNameValueForSingleRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'td'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAllRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'display-none'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getInvisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAllRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'display-none'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getAllRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#customer-table-body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;TestUtilities.js:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wwwRootScriptsFolder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../JavaScriptModules/wwwroot/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wwwRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wwwRootScriptsFolder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wwwRootScriptsFolder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lib/jquery/jquery.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./Builders/BaseHtmlBuilder.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    
    &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TestUtilitiesModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;CustomerOverviewHtmlBuilder.js:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseHtmlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'div'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'div'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchForm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createSearchForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataGrid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createEmptyGrid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataGrid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowTemplates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createRowTemplates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rowTemplates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;


    &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearDataRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customerTable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#customer-table-body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadingRow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customerTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.loading-row'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;customerTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;customerTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadingRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hideLoadingRow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customerTable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#customer-table-body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadingRow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customerTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.loading-row'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;loadingRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'display-none'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withDataRow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customerTable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#customer-table-body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseHtmlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'customer-row'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;customerTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;build&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createSearchForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchform&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'div'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;searchform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'search-customer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;searchform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;baseHtmlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTextInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'searchCustomerName'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;searchform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;baseHtmlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTextInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'searchEmail'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;searchform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;baseHtmlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTextInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'searchCountry'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;searchform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;baseHtmlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'customerOverviewSearchButton'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createEmptyGrid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'table'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tableBody&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tbody'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;tableBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'customer-table-body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tableBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'loading-row'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;tableBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createRowTemplates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'table'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'display-none'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseHtmlBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data-row-template'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'customer-row'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerOverviewHtmlBuilderModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BaseHtmlBuilderModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;BaseHtmlBuilder.js:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTextInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'input'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'button'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'button'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createRow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rowDefinition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;rowElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowDefinition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;rowElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowDefinition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createCells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rowDefinition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;rowElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createCells&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resultingCells&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cellElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'td'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;cellElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;cellElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;resultingCells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cellElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resultingCells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BaseHtmlBuilderModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When you see this code it might seem like a lot of work to create a few tests. By extracting helper methods to a separate class you will have to invest a bit more initially but will be faster at writing tests later. Also by practicing TDD, you should be able to create the template as you are building your HTML and initial JavaScript methods so the extra invested time should not come all at once after completing your complete HTML and JavaScript logic.&lt;/p&gt;

&lt;p&gt;A debugging/troubleshooting tip for your HTML builders. If you’re unsure that the code to create the HTML is correct. At a watch to the document.body.innerHTML variable and paste the value in a new HTML page file in Visual Studio. Select all contents in the file and right-click to get the context menu and select Un-Minify to get a nice readable HTML with syntax highlighting to troubleshoot the output of the builder.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200208/DocumentHtmlUnMinify.png&quot; alt=&quot;[Un-Minify option for HTML]&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jest supports a way to use tests with parameters but the Visual Studio integration does not pick them up. So for now, I just add multiple tests for the different parameters I would like to test. To avoid having to change all the tests when my arrangements or assertions have to change, I introduce ScenarioBuilder and/or AssertionHelper modules that again abstract the test scenarios and assertions in a nice readable fluent syntax.&lt;/p&gt;

&lt;p&gt;In the example, I added a scenario builder module in the file itself containing a full set of arrange, act and assert methods. If the module gets to large or you see duplication across several builders you could choose to create builders with better separation of concerns. The point is to show an example of a pattern for writing readable tests where the implementation details can be changed in a single spot in the code should the page or functionality change. For the full working solution see &lt;a href=&quot;https://github.com/SamanthaNeilen/JavascriptModulesExamples/tree/V1.4-first-test-using-scenario-builder&quot;&gt;my GitHub repo with the tag: V1.4-first-test-using-scenario-builder&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;UnitTest.js&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Search using Name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;WHEN 3 rows loaded THEN Search with full Name SHOULD filter to show one row&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scenario&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SearchCustomerNameScenarioBuilderModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//arrange&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;valueToSearch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'second customer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expectedNumberOfVisibleRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expectedNumberOfInvisibleRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;nx&quot;&gt;scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arrange_Page_With_3_Initial_DataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//act&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;act_SearchName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//assert&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Number_Of_Visible_Rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expectedNumberOfVisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Number_Of_Invisible_Rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expectedNumberOfInvisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Visible_Rows_Name_Is_Complete_SearchValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Invisible_Rows_Name_Do_Not_Contain_SearchValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;WHEN 3 rows loaded THEN Search with partial Name SHOULD filter to show one row&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scenario&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SearchCustomerNameScenarioBuilderModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//arrange&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;valueToSearch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expectedNumberOfVisibleRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expectedNumberOfInvisibleRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arrange_Page_With_3_Initial_DataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//act&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;act_SearchName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//assert&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Number_Of_Visible_Rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expectedNumberOfVisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Number_Of_Invisible_Rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expectedNumberOfInvisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Visible_Rows_Name_Contains_SearchValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Invisible_Rows_Name_Do_Not_Contain_SearchValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;WHEN 3 rows loaded THEN Search with empty Name SHOULD filter to show all rows&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scenario&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SearchCustomerNameScenarioBuilderModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//arrange&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;valueToSearch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expectedNumberOfVisibleRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expectedNumberOfInvisibleRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arrange_Page_With_3_Initial_DataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//act&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;act_SearchName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//assert&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Number_Of_Visible_Rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expectedNumberOfVisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Number_Of_Invisible_Rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expectedNumberOfInvisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;


    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testProjectRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../../../'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;jest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resetModules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;testProjectRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TestUtilities.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TestUtilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;testProjectRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Builders/CustomerOverviewHtmlBuilder.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wwwRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testProjectRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TestUtilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wwwRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wwwRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'js/utilities.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wwwRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'js/customer-overview.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arrange_Page_With_3_Initial_DataRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerOverviewHtmlBuilderModule&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearDataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hideLoadingRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withDataRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'first customer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'first customer email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'first customer country'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withDataRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'second customer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'second customer email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'second customer country'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;withDataRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'testcustomer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcustomer email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'testcustomer country'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;act_SearchName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#searchCustomerName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerOverviewModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filterData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Number_Of_Visible_Rows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numberOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getVisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toHaveLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numberOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Number_Of_Invisible_Rows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numberOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getInvisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toHaveLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numberOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Visible_Rows_Name_Is_Complete_SearchValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoadingRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'td'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Visible_Rows_Name_Contains_SearchValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoadingRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'td'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringContaining&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert_Invisible_Rows_Name_Do_Not_Contain_SearchValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getInvisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoadingRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'td'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringContaining&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameToSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isLoadingRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'loading-row'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getVisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAllRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'display-none'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getInvisibleRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAllRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'display-none'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getAllRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#customer-table-body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SearchCustomerNameScenarioBuilderModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;resources&quot;&gt;Resources&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/javascript/unit-testing-javascript-with-visual-studio?view=vs-2019#unit-tests-in-other-project-types&quot;&gt;Microsoft Docs page on Unit testing JavaScript and TypeScript in Visual Studio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jestjs.io/docs/en/expect&quot;&gt;Jest expect method documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Builder%20pattern&quot;&gt;Wikipedia page for the builder pattern&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="JavaScript" /><category term="TestAutomation" /><summary type="html">Visual Studio has support for unit tests in the Test Explorer window so you can run all your C# and JavaScript tests from that editor. A separate Node project can contain al the test code separate from the code that gets published and deployed. It is possible to include the tests in the web project itself. See the Microsoft Docs page on Unit testing JavaScript and TypeScript in Visual Studio for more details. This post is a continuation of my post about Creating more maintainable JavaScript with self-executing functions. I will continue building on the JavaScriptModules project presented in that post. A working Visual Studio project with the code can be found in my JavaScriptModuleExamples repository on GitHub. If you use the project from GitHub be sure to follow to ReadMe.md on the repository for additional steps to see the tests in Visual Studio Test Explorer. The befits of writing these JavaScript unit tests are getting earlier feedback about the state of your JavaScript without writing more fragile and slower integration tests. The unit tests can also be run in the build pipeline next to your regular unit tests using an npm test command step before deploying to an environment. Table of contents: Setup a Node.Js Test project Writing tests Resources Setup a Node.Js Test project So to start testing, add a Blank Node.js Console Application project. You need to have the Node.js workload installed in Visual Studio. When you add a new file to the project via the “Add -&amp;gt; New Item” context menu, you can see the test frameworks that Visual Studio already provides a template file for. The template file contains a passing test and a failing test showing the syntax for basic tests. An article comparing several of the different JavaScript frameworks can be found on Medium. I will be working with the Jest framework in this post, so add a Jest test file. The contents for the default new Jest file is shown below. describe('Test Suite 1', function () { it(&quot;Test 1 - This shouldn't fail&quot;, function () { expect(true).toBeTruthy(); }); it('Test 2 - This should fail', function () { expect(1 === 1).toBeTruthy(); // &quot;This shouldn't fail&quot; expect(false).toBeTruthy(); }); }); To run the tests using Visual Studio Test you need to set the “JavaScript Unit Test” properties in the project properties and install the jest and jest-editor-support npm packages. For the “JavaScript Unit Tests” properties set the “Test Framework” to the framework of choice (Jest, in my case) and set the Test Root to a “Tests” subfolder. Using a subfolder will ensure that you can add extra folders with builder and helper classes without them being seen as potential unit test files. Now the tests will show up in Test Explorer after building the project. You may have to restart Visual Studio the first time before any tests show up. Also to ensure running or debugging the latest version of your tests you always need to build before running a test via Test Explorer. Writing tests To start testing the customer-overview.js file from the JavaScriptModules web project we first have to hookup some dependencies and mocks. We need jQuery, a mock of our customer-service.js and the HTML or DOM setup that the module can interact with. First, add a testutilities.js file that will set up a module that has the link to the wwwroot of our project under test and loads in 3rd party libraries needed for testing. The module is shown below. (function() { let currentModule = {}; let wwwRootScriptsFolder = '../JavaScriptModules/wwwroot/'; currentModule.wwwRoot = wwwRootScriptsFolder; currentModule.initialize = function () { global.jQuery = global.$ = require(wwwRootScriptsFolder + 'lib/jquery/jquery.js'); }; global.TestUtilitiesModule = currentModule; })(); Now we can use the TestUtilities module in the test file to do a simple test using jQuery. This example also shows how to declare some HTML to interact with. The document is actually a mock provided by the test framework. Any interactions your code and modules have with the window or document will work as expected. describe('Test Suite 1', function () { beforeEach(() =&amp;gt; { jest.resetModules(); require('../TestUtilities.js'); global.TestUtilitiesModule.initialize(); document.body.innerHTML = ''; const input = document.createElement('label'); input.id = 'myLabel'; document.body.appendChild(input); }); it(&quot;Test 1 - This shouldn't fail&quot;, function () { expect($('#myLabel')).toHaveLength(1); }); it('Test 2 - This should fail', function () { expect(1 === 1).toBeTruthy(); // &quot;This shouldn't fail&quot; expect(false).toBeTruthy(); }); }); If you run the test in debugging mode, you can stop and inspect the variables and DOM. Now, we want to build the HTML template for the initial page for the module under test. I usually create a module using the builder pattern to be able to create the template in a fluent syntax. This way you can use the builder in your tests to create multiple starting HTML situations with expressive and readable syntax. The builder and the test file using the builder are shown below. Not that in the builder below I only add the required elements to check my logic. All elements that are for layout and not functionality are omitted. (The code below can be also be found in my GitHub repo under the tag: V1.3-first-test-module-using-HTML-builder my GitHub repo under the tag: V1.3-first-test-module-using-HTML-builder.) (Also note that the code shown is a refinement of multiple times writing, evaluating, refactoring and running and reading the tests iterations. If your logic and HTML are simple you may not even these builders to write a few simple tests.) UnitTest.js: describe('Search using Name', function () { beforeEach(() =&amp;gt; { const testProjectRoot = '../../../'; jest.resetModules(); require(testProjectRoot + 'TestUtilities.js'); global.TestUtilitiesModule.initialize(); require(testProjectRoot + 'Builders/CustomerOverviewHtmlBuilder.js'); let wwwRoot = testProjectRoot + global.TestUtilitiesModule.wwwRoot; require(wwwRoot + 'js/utilities.js'); require(wwwRoot + 'js/customer-overview.js'); //arrange initial state let htmlTemplate = global.customerOverviewHtmlBuilderModule .new() .clearDataRows() .hideLoadingRow() .withDataRow('first customer', 'first customer email', 'first customer country') .withDataRow('second customer', 'second customer email', 'second customer country') .withDataRow('testcustomer', 'testcustomer email', 'testcustomer country') .build(); document.body.innerHTML = ''; document.body.appendChild(htmlTemplate); }); it(&quot;WHEN 3 rows loaded THEN Search with full Name SHOULD filter to show one row&quot;, function () { //arrange let searchNameValue = 'second customer'; let initialVisibleRows = getVisibleRows(); let initialInvisibleRows = getInvisibleRows(); //act $(&quot;#searchCustomerName&quot;).val(searchNameValue); window.customerOverviewModule.filterData(); //assert intial state expect(initialVisibleRows).toHaveLength(3); expect(initialInvisibleRows).toHaveLength(1); //assert state after action let filteredVisibleRows = getVisibleRows(); let filteredInvisibleRows = getInvisibleRows(); expect(filteredVisibleRows).toHaveLength(1); expect(filteredInvisibleRows).toHaveLength(3); let actualVisibleRowSearchName = getSearchNameValueForSingleRow(filteredVisibleRows[0]); expect(actualVisibleRowSearchName).toBe(searchNameValue); }); function getSearchNameValueForSingleRow(row) { return $(row).find('td')[0].innerHTML; } function getVisibleRows() { return $.grep(getAllRows(), function (row) { return !$(row).hasClass('display-none'); }); } function getInvisibleRows() { return $.grep(getAllRows(), function (row) { return $(row).hasClass('display-none'); }); } function getAllRows() { return $('#customer-table-body').find('tr'); } }); TestUtilities.js: (function() { let currentModule = {}; let wwwRootScriptsFolder = '../JavaScriptModules/wwwroot/'; currentModule.wwwRoot = wwwRootScriptsFolder; currentModule.initialize = function () { global.jQuery = global.$ = require(wwwRootScriptsFolder + 'lib/jquery/jquery.js'); require('./Builders/BaseHtmlBuilder.js'); }; global.TestUtilitiesModule = currentModule; })(); CustomerOverviewHtmlBuilder.js: (function ($, baseHtmlBuilder) { let currentModule = {}; let root = document.createElement('div'); currentModule.new = function () { root = document.createElement('div'); let searchForm = createSearchForm(); root.appendChild(searchForm); let dataGrid = createEmptyGrid(); root.appendChild(dataGrid); let rowTemplates = createRowTemplates(); root.appendChild(rowTemplates); return currentModule; }; currentModule.clearDataRows = function() { let customerTable = $(root).find('#customer-table-body'); let loadingRow = customerTable.find('.loading-row'); customerTable.html(''); customerTable.append(loadingRow); return currentModule; }; currentModule.hideLoadingRow = function () { let customerTable = $(root).find('#customer-table-body'); let loadingRow = customerTable.find('.loading-row'); loadingRow.addClass('display-none'); return currentModule; }; currentModule.withDataRow = function (name, email, country) { let customerTable = $(root).find('#customer-table-body'); let row = baseHtmlBuilder.createRow( { Id: '', className: 'customer-row', cells: [ { innerHTML: name }, { innerHTML: email }, { innerHTML: country }] } ); customerTable.append(row); return currentModule; }; currentModule.build = function () { return root; }; function createSearchForm() { let searchform = document.createElement('div'); searchform.id = 'search-customer'; searchform.appendChild(baseHtmlBuilder.createTextInput('searchCustomerName')); searchform.appendChild(baseHtmlBuilder.createTextInput('searchEmail')); searchform.appendChild(baseHtmlBuilder.createTextInput('searchCountry')); searchform.appendChild(baseHtmlBuilder.createButton('customerOverviewSearchButton')); return searchform; } function createEmptyGrid() { let table = document.createElement('table'); let tableBody = document.createElement('tbody'); tableBody.id = 'customer-table-body'; table.appendChild(tableBody); let row = document.createElement('tr'); row.className = 'loading-row'; tableBody.appendChild(row); return table; } function createRowTemplates() { let table = document.createElement('table'); table.className = 'display-none'; let row = baseHtmlBuilder.createRow( { id: 'data-row-template', className: 'customer-row', cells: [ { innerHTML: '' }, { innerHTML: '' }, { innerHTML: '' }] } ); table.appendChild(row); return table; } global.customerOverviewHtmlBuilderModule = currentModule; })(jQuery, global.BaseHtmlBuilderModule); BaseHtmlBuilder.js: (function ($) { let currentModule = {}; currentModule.createTextInput = function (id) { let input = document.createElement('input'); input.id = id; input.type = 'text'; return input; }; currentModule.createButton = function (id) { let button = document.createElement('button'); button.id = id; button.type = 'button'; return button; }; currentModule.createRow = function (rowDefinition) { let rowElement = document.createElement('tr'); rowElement.id = rowDefinition.Id; rowElement.className = rowDefinition.className; let cells = currentModule.createCells(rowDefinition.cells); $.each(cells, function (index, cell) { rowElement.appendChild(cell); }); return rowElement; }; currentModule.createCells = function (cells) { let resultingCells = []; $.each(cells, function (index, cell) { let cellElement = document.createElement('td'); cellElement.className = cell.className; cellElement.innerHTML = cell.innerHTML; resultingCells.push(cellElement); }); return resultingCells; }; global.BaseHtmlBuilderModule = currentModule; })(jQuery); When you see this code it might seem like a lot of work to create a few tests. By extracting helper methods to a separate class you will have to invest a bit more initially but will be faster at writing tests later. Also by practicing TDD, you should be able to create the template as you are building your HTML and initial JavaScript methods so the extra invested time should not come all at once after completing your complete HTML and JavaScript logic. A debugging/troubleshooting tip for your HTML builders. If you’re unsure that the code to create the HTML is correct. At a watch to the document.body.innerHTML variable and paste the value in a new HTML page file in Visual Studio. Select all contents in the file and right-click to get the context menu and select Un-Minify to get a nice readable HTML with syntax highlighting to troubleshoot the output of the builder. Jest supports a way to use tests with parameters but the Visual Studio integration does not pick them up. So for now, I just add multiple tests for the different parameters I would like to test. To avoid having to change all the tests when my arrangements or assertions have to change, I introduce ScenarioBuilder and/or AssertionHelper modules that again abstract the test scenarios and assertions in a nice readable fluent syntax. In the example, I added a scenario builder module in the file itself containing a full set of arrange, act and assert methods. If the module gets to large or you see duplication across several builders you could choose to create builders with better separation of concerns. The point is to show an example of a pattern for writing readable tests where the implementation details can be changed in a single spot in the code should the page or functionality change. For the full working solution see my GitHub repo with the tag: V1.4-first-test-using-scenario-builder.) UnitTest.js describe('Search using Name', function () { it(&quot;WHEN 3 rows loaded THEN Search with full Name SHOULD filter to show one row&quot;, function () { let scenario = global.SearchCustomerNameScenarioBuilderModule.new(); //arrange const valueToSearch = 'second customer'; const expectedNumberOfVisibleRows = 1; const expectedNumberOfInvisibleRows = 3; scenario.arrange_Page_With_3_Initial_DataRows(); //act scenario.act_SearchName(valueToSearch); //assert scenario.assert_Number_Of_Visible_Rows(expectedNumberOfVisibleRows) .assert_Number_Of_Invisible_Rows(expectedNumberOfInvisibleRows) .assert_Visible_Rows_Name_Is_Complete_SearchValue(valueToSearch) .assert_Invisible_Rows_Name_Do_Not_Contain_SearchValue(valueToSearch); }); it(&quot;WHEN 3 rows loaded THEN Search with partial Name SHOULD filter to show one row&quot;, function () { let scenario = global.SearchCustomerNameScenarioBuilderModule.new(); //arrange const valueToSearch = 'test'; const expectedNumberOfVisibleRows = 1; const expectedNumberOfInvisibleRows = 3; scenario.arrange_Page_With_3_Initial_DataRows(); //act scenario.act_SearchName(valueToSearch); //assert scenario.assert_Number_Of_Visible_Rows(expectedNumberOfVisibleRows) .assert_Number_Of_Invisible_Rows(expectedNumberOfInvisibleRows) .assert_Visible_Rows_Name_Contains_SearchValue(valueToSearch) .assert_Invisible_Rows_Name_Do_Not_Contain_SearchValue(valueToSearch); }); it(&quot;WHEN 3 rows loaded THEN Search with empty Name SHOULD filter to show all rows&quot;, function () { let scenario = global.SearchCustomerNameScenarioBuilderModule.new(); //arrange const valueToSearch = ''; const expectedNumberOfVisibleRows = 3; const expectedNumberOfInvisibleRows = 1; scenario.arrange_Page_With_3_Initial_DataRows(); //act scenario.act_SearchName(valueToSearch); //assert scenario.assert_Number_Of_Visible_Rows(expectedNumberOfVisibleRows) .assert_Number_Of_Invisible_Rows(expectedNumberOfInvisibleRows); }); (function (jest, expect) { let currentModule = {}; currentModule.new = function() { const testProjectRoot = '../../../'; jest.resetModules(); require(testProjectRoot + 'TestUtilities.js'); global.TestUtilitiesModule.initialize(); require(testProjectRoot + 'Builders/CustomerOverviewHtmlBuilder.js'); let wwwRoot = testProjectRoot + global.TestUtilitiesModule.wwwRoot; require(wwwRoot + 'js/utilities.js'); require(wwwRoot + 'js/customer-overview.js'); return currentModule; }; currentModule.arrange_Page_With_3_Initial_DataRows = function () { document.body.innerHTML = ''; const template = global.customerOverviewHtmlBuilderModule .new() .clearDataRows() .hideLoadingRow() .withDataRow('first customer', 'first customer email', 'first customer country') .withDataRow('second customer', 'second customer email', 'second customer country') .withDataRow('testcustomer', 'testcustomer email', 'testcustomer country') .build(); document.body.appendChild(template); return currentModule; }; currentModule.act_SearchName = function (nameToSearch) { $(&quot;#searchCustomerName&quot;).val(nameToSearch); window.customerOverviewModule.filterData(); return currentModule; }; currentModule.assert_Number_Of_Visible_Rows = function (numberOfRows) { expect(getVisibleRows()).toHaveLength(numberOfRows); return currentModule; }; currentModule.assert_Number_Of_Invisible_Rows = function (numberOfRows) { expect(getInvisibleRows()).toHaveLength(numberOfRows); return currentModule; }; currentModule.assert_Visible_Rows_Name_Is_Complete_SearchValue = function (nameToSearch) { let rows = getVisibleRows(); $.each(rows, function (index, row) { if (!isLoadingRow(row)) { expect($(row).find('td')[0].innerHTML).toBe(nameToSearch); } }); return currentModule; }; currentModule.assert_Visible_Rows_Name_Contains_SearchValue = function (nameToSearch) { let rows = getVisibleRows(); $.each(rows, function (index, row) { if (!isLoadingRow(row)) { expect($(row).find('td')[0].innerHTML).toEqual(expect.stringContaining(nameToSearch)); } }); return currentModule; }; currentModule.assert_Invisible_Rows_Name_Do_Not_Contain_SearchValue = function (nameToSearch) { let rows = getInvisibleRows(); $.each(rows, function (index, row) { if (!isLoadingRow(row)) { expect($(row).find('td')[0].innerHTML).toEqual(expect.not.stringContaining(nameToSearch)); } }); return currentModule; }; function isLoadingRow(row) { return $(row).hasClass('loading-row'); } function getVisibleRows() { return $.grep(getAllRows(), function (row) { return !$(row).hasClass('display-none'); }); } function getInvisibleRows() { return $.grep(getAllRows(), function (row) { return $(row).hasClass('display-none'); }); } function getAllRows() { return $('#customer-table-body').find('tr'); } global.SearchCustomerNameScenarioBuilderModule = currentModule; })(jest, expect); }); Resources Microsoft Docs page on Unit testing JavaScript and TypeScript in Visual Studio Jest expect method documentation Wikipedia page for the builder pattern</summary></entry><entry><title type="html">Creating more maintainable JavaScript with self-executing functions</title><link href="https://samanthaneilen.github.io/2019/12/30/Creating-more-maintainable-javascript-with-self-executing-functions.html" rel="alternate" type="text/html" title="Creating more maintainable JavaScript with self-executing functions" /><published>2019-12-30T00:00:00+01:00</published><updated>2019-12-30T00:00:00+01:00</updated><id>https://samanthaneilen.github.io/2019/12/30/Creating-more-maintainable-javascript-with-self-executing-functions</id><content type="html" xml:base="https://samanthaneilen.github.io/2019/12/30/Creating-more-maintainable-javascript-with-self-executing-functions.html">&lt;p&gt;I still mostly use regular JavaScript with jQuery in my applications. Before I started writing self-executing modules, my JavaScript was embedded all over the place in HTML and it was untestable (except for running a page in the browser).&lt;/p&gt;

&lt;p&gt;A year or so ago a colleague introduced me to the concept of self-executing JavaScript functions. (Thank you Gijs Stoeldraaijers!) After adopting this practice, I found that I could write JavaScript modules with keeping the SOLID principles in mind. The most important benefits are creating smaller modules with a single purpose that can be tested and dependency injection support to make unit testing even easier. Even without adopting unit testing right away the improvements to maintainability were immense for me.&lt;/p&gt;

&lt;p&gt;I’ll not go into JavaScript unit testing in this post and do an in-depth post as my next blog post. If you want to look into it, without waiting for that, please look at the &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/javascript/unit-testing-javascript-with-visual-studio?view=vs-2019#unit-tests-in-other-project-types&quot;&gt;Microsoft Docs page on Unit testing JavaScript and TypeScript in Visual Studio&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of contents:&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#example-of-the-old-way-of-working-embedding-javascript-in-the-page&quot; id=&quot;markdown-toc-example-of-the-old-way-of-working-embedding-javascript-in-the-page&quot;&gt;Example of the old way of working (embedding JavaScript in the page)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#self-executing-functions&quot; id=&quot;markdown-toc-self-executing-functions&quot;&gt;Self-executing functions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#separating-html-control-events-and-javascript-hook-ups&quot; id=&quot;markdown-toc-separating-html-control-events-and-javascript-hook-ups&quot;&gt;Separating HTML control events and JavaScript hook-ups&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#separating-html-templating-from-your-javascript-code&quot; id=&quot;markdown-toc-separating-html-templating-from-your-javascript-code&quot;&gt;Separating HTML templating from your JavaScript code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;example-of-the-old-way-of-working-embedding-javascript-in-the-page&quot;&gt;Example of the old way of working (embedding JavaScript in the page)&lt;/h3&gt;
&lt;p&gt;Below, I have created an example of my old way of writing JavaScript on an overview page that loads data from an API endpoint and has some filter capabilities.&lt;/p&gt;

&lt;p&gt;The data templates are hardcoded strings in the JavaScript and the search button event hookup is done through HTML markup.&lt;/p&gt;

&lt;p&gt;A working Visual Studio project with the code listed below can be found in my &lt;a href=&quot;https://github.com/SamanthaNeilen/JavascriptModulesExamples/tree/V1.0-Embedded-JavaScript&quot;&gt;JavaScriptModuleExamples repository on GitHub with the tag “V1.0-Embedded-JavaScript”&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@page
@model IndexModel
@{
    ViewData[&quot;Title&quot;] = &quot;Home page&quot;;
}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Customer overview&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

    @* Searchform *@
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;search-customer&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-group row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;searchCustomerName&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-sm-2 col-form-label&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Name&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-sm-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;searchCustomerName&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-group row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;searchEmail&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-sm-2 col-form-label&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Email&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-sm-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;searchEmail&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-group row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;searchCountry&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-sm-2 col-form-label&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Country&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-sm-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;searchCountry&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-sm btn-primary col-sm-2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;filterData()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Search&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    @* Grid for data *@
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;table mt-2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;thead&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Name&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Email&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Country&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/thead&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tbody&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customer-table-body&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loading-row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;colspan=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;progress&amp;gt;&amp;lt;/progress&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tbody&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

@section Scripts {
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CUSTOMER_ROW_SELECTOR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.customer-row'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;LOADING_ROW_SELECTOR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.loading-row'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;DISPLAY_NONE_CLASS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'display-none'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#customer-table-body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;showLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://localhost:44313/api/customer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jqXHR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getDataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;showCustomerRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CUSTOMER_ROW_SELECTOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jqXHR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;errorThrown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;errorThrown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getDataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowTemplate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;tr class=&quot;customer-row&quot;&amp;gt;&amp;lt;td&amp;gt;{name}&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;{email}&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;{country}&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;tr class=&quot;loading-row&quot;&amp;gt;&amp;lt;td colspan=&quot;3&quot;&amp;gt;&amp;lt;progress&amp;gt;&amp;lt;/progress&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowTemplate&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{name}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{email}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{country}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LOADING_ROW_SELECTOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DISPLAY_NONE_CLASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CUSTOMER_ROW_SELECTOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DISPLAY_NONE_CLASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showCustomerRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DISPLAY_NONE_CLASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LOADING_ROW_SELECTOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DISPLAY_NONE_CLASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filterData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;showLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customerRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CUSTOMER_ROW_SELECTOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#searchCustomerName'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchEmail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#searchEmail'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchCountry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#searchCountry'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowsToShow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'td'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isMatchForFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                        &lt;span class=&quot;nx&quot;&gt;isMatchForFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                        &lt;span class=&quot;nx&quot;&gt;isMatchForFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchCountry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;


                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

           &lt;span class=&quot;nx&quot;&gt;showCustomerRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rowsToShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isMatchForFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;valueInRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;valueInRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;loadData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;self-executing-functions&quot;&gt;Self-executing functions&lt;/h2&gt;

&lt;p&gt;An example of a self-executing module is shown below. The proper term for the self-executing module is Immediately Invoked Function Expressions or IIFE.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someOtherInjectedModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PRIVATE_VARIABLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello world!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myPublicFunction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;privateFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;privateFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PRIVATE_VARIABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ModuleExample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SomeOtherModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ModuleExample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myPublicFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The function parameters make it possible to inject dependencies. This has 2 benefits.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;You can inject mocks when unit testing. This makes unit testing much easier.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;All the external dependencies, that the class relies on, are shown at the top and bottom of the file.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Another great benefit that this pattern gives is variable scoping. All variables scoped within the module are scoped to the function and do not have to be global.&lt;/p&gt;

&lt;p&gt;The CURRENT_MODULE object and all its functions/properties are exposed globally by assigning it to a global window property. All the other “private” functions and variables are never exposed outside the scope of the self-executing function.&lt;/p&gt;

&lt;p&gt;The  example as shown in the first code listing of this post rewritten with an IIFE is shown below.&lt;/p&gt;

&lt;p&gt;A working Visual Studio project with the code listed below can be found in my &lt;a href=&quot;https://github.com/SamanthaNeilen/JavascriptModulesExamples&quot;&gt;JavaScriptModuleExamples repository on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;customer-overview.js:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customerService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;utilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;CUSTOMER_ROW_SELECTOR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.customer-row'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;LOADING_ROW_SELECTOR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.loading-row'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#customer-table-body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#customerOverviewSearchButton'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filterData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;showLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;customerService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getCustomers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showCustomerData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filterData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;showLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customerRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CUSTOMER_ROW_SELECTOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#searchCustomerName'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchEmail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#searchEmail'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchCountry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#searchCountry'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowsToShow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'td'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;utilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isMatchForFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;utilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isMatchForFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;utilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isMatchForFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchCountry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;showCustomerRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rowsToShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showCustomerData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getDataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;showCustomerRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getDataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;outerHtmlProperty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'outerHTML'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRowTemplateId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data-row-template'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowTemplate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRowTemplateId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outerHtmlProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id=&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRowTemplateId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LOADING_ROW_SELECTOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outerHtmlProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowTemplate&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{name}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{email}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{country}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;utilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LOADING_ROW_SELECTOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;forEachCustomerRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;utilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hideElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showCustomerRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filteredRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;forEachCustomerRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;utilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filteredRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;utilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hideElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LOADING_ROW_SELECTOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;forEachCustomerRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;callBack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filteredRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customerRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CUSTOMER_TABLE_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CUSTOMER_ROW_SELECTOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filteredRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;customerRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filteredRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;callBack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerOverviewModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;utilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerOverviewModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;utilities.js&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;DISPLAY_NONE_CLASS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'display-none'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isMatchForFilter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;valueInRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;valueInRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hideElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elementSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parentSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elementSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DISPLAY_NONE_CLASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elementSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parentSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elementSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DISPLAY_NONE_CLASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentSelector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;utilitiesModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;customer-service.js&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;CUSTOMER_URI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://localhost:44313/api/customer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getCustomers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;successCallBack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CUSTOMER_URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jqXHR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;successCallBack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jqXHR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;errorThrown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;errorThrown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;index.cshtml:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@page
@model IndexModel
@{
    ViewData[&quot;Title&quot;] = &quot;Home page&quot;;
}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Customer overview&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

    @* Searchform *@
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;search-customer&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-group row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;searchCustomerName&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-sm-2 col-form-label&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Name&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-sm-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;searchCustomerName&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-group row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;searchEmail&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-sm-2 col-form-label&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Email&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-sm-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;searchEmail&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-group row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;searchCountry&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-sm-2 col-form-label&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Country&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-sm-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;searchCountry&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customerOverviewSearchButton&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-sm btn-primary col-sm-2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Search&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    @* Grid for data *@
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;table mt-2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;thead&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Name&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Email&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Country&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/thead&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tbody&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customer-table-body&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loading-row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;colspan=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;progress&amp;gt;&amp;lt;/progress&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tbody&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;

    @* Row templates *@
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;display-none&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data-row-template&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customer-row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{name}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{email}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{country}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

@section Scripts {
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;environment&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;include=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Development&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/js/utilities.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/js/customer-service.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/js/customer-overview.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/environment&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;environment&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;exclude=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Development&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/js/dist/customer-overview.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/environment&amp;gt;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;bundleconfig.json (to generate the minified file in de dist folder)&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;outputFileName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wwwroot/css/site.min.css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;inputFiles&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wwwroot/css/site.css&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;outputFileName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wwwroot/js/dist/customer-overview.min.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;inputFiles&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wwwroot/js/utilities.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wwwroot/js/customer-service.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wwwroot/js/customer-overview.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;minify&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;enabled&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;renameLocals&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sourceMap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;separating-html-control-events-and-javascript-hook-ups&quot;&gt;Separating HTML control events and JavaScript hook-ups&lt;/h2&gt;

&lt;p&gt;When embedding JavaScript in the HTML pages, the event hookups are usually written directly in the controls, mixing markup with the JavaScript. In my opinion, this makes it harder to find how and where my JavaScript functions are used.&lt;/p&gt;

&lt;p&gt;By hooking up al the events in the JavaScript module there’s no need to embed any JavaScript in the markup for the page. The HTML markup is only used for layout. The functionality and/or interaction logic is completely separate and centralized in the JavaScript modules.&lt;/p&gt;

&lt;p&gt;There are still dependencies between the DOM and the JavaScript module but the test framework I have been using (Jest) provides a DOM mock. The DOM mock can be accessed like the browser DOM and you can test the interactions and their results. I’ll show examples in my next blog post.&lt;/p&gt;

&lt;p&gt;The example page with embedded JavaScript, rewritten with an IIFE is shown below.&lt;/p&gt;

&lt;p&gt;Event hookup before (in the html):&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-sm btn-primary col-sm-2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;window.customerOverviewModule.filterData()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Search&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Event hookup after refactoring to the IIFE:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customerOverviewSearchButton&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-sm btn-primary col-sm-2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Search&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customerService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;utilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

     &lt;span class=&quot;c1&quot;&gt;///...&lt;/span&gt;
    
     &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#customerOverviewSearchButton'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filterData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

     &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;c1&quot;&gt;///...&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    
     &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filterData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     	&lt;span class=&quot;c1&quot;&gt;///...&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
     
     &lt;span class=&quot;c1&quot;&gt;///...&lt;/span&gt;
     
     &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerOverviewModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CURRENT_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;utilitiesModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerOverviewModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;separating-html-templating-from-your-javascript-code&quot;&gt;Separating HTML templating from your JavaScript code&lt;/h2&gt;

&lt;p&gt;Sometimes you have to create multiple repeating element groups from a JavaScript array. An example is calling an API to retrieve orders then printing a line with each order object. You might define a constant with the HTML template as a string in your JavaScript. For maintainability, code completion and analysis benefits, I find it better to just include a hidden div with the template on the page. You won’t have to deal with escaping reserved characters in a string like quotes and slashes and also gain indenting and linting support from your IDE.&lt;/p&gt;

&lt;p&gt;The HTML string used before the refactoring was:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getDataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowTemplate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;tr class=&quot;customer-row&quot;&amp;gt;&amp;lt;td&amp;gt;{name}&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;{email}&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;{country}&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;tr class=&quot;loading-row&quot;&amp;gt;&amp;lt;td colspan=&quot;3&quot;&amp;gt;&amp;lt;progress&amp;gt;&amp;lt;/progress&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowTemplate&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{name}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{email}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{country}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The code using templating from the overview page example as an IIFE  is shown below:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; @* Grid for data *@
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;table mt-2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;thead&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Name&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Email&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@Texts.Country&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/thead&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tbody&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customer-table-body&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loading-row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;colspan=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;progress&amp;gt;&amp;lt;/progress&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tbody&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;

    @* Row templates *@
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;display-none&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data-row-template&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customer-row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{name}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{email}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{country}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getDataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;outerHtmlProperty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'outerHTML'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRowTemplateId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'data-row-template'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowTemplate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRowTemplateId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outerHtmlProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id=&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRowTemplateId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LOADING_ROW_SELECTOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outerHtmlProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customerList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowTemplate&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{name}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{email}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{country}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="JavaScript" /><summary type="html">I still mostly use regular JavaScript with jQuery in my applications. Before I started writing self-executing modules, my JavaScript was embedded all over the place in HTML and it was untestable (except for running a page in the browser). A year or so ago a colleague introduced me to the concept of self-executing JavaScript functions. (Thank you Gijs Stoeldraaijers!) After adopting this practice, I found that I could write JavaScript modules with keeping the SOLID principles in mind. The most important benefits are creating smaller modules with a single purpose that can be tested and dependency injection support to make unit testing even easier. Even without adopting unit testing right away the improvements to maintainability were immense for me. I’ll not go into JavaScript unit testing in this post and do an in-depth post as my next blog post. If you want to look into it, without waiting for that, please look at the Microsoft Docs page on Unit testing JavaScript and TypeScript in Visual Studio. Table of contents: Example of the old way of working (embedding JavaScript in the page) Self-executing functions Separating HTML control events and JavaScript hook-ups Separating HTML templating from your JavaScript code Example of the old way of working (embedding JavaScript in the page) Below, I have created an example of my old way of writing JavaScript on an overview page that loads data from an API endpoint and has some filter capabilities. The data templates are hardcoded strings in the JavaScript and the search button event hookup is done through HTML markup. A working Visual Studio project with the code listed below can be found in my JavaScriptModuleExamples repository on GitHub with the tag “V1.0-Embedded-JavaScript”. @page @model IndexModel @{ ViewData[&quot;Title&quot;] = &quot;Home page&quot;; } &amp;lt;div class=&quot;col&quot;&amp;gt; &amp;lt;h1&amp;gt;Customer overview&amp;lt;/h1&amp;gt; @* Searchform *@ &amp;lt;div id=&quot;search-customer&quot;&amp;gt; &amp;lt;div class=&quot;form-group row&quot;&amp;gt; &amp;lt;label for=&quot;searchCustomerName&quot; class=&quot;col-sm-2 col-form-label&quot;&amp;gt;@Texts.Name&amp;lt;/label&amp;gt; &amp;lt;div class=&quot;col-sm-5&quot;&amp;gt; &amp;lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;searchCustomerName&quot; value=&quot;&quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&quot;form-group row&quot;&amp;gt; &amp;lt;label for=&quot;searchEmail&quot; class=&quot;col-sm-2 col-form-label&quot;&amp;gt;@Texts.Email&amp;lt;/label&amp;gt; &amp;lt;div class=&quot;col-sm-5&quot;&amp;gt; &amp;lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;searchEmail&quot; value=&quot;&quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&quot;form-group row&quot;&amp;gt; &amp;lt;label for=&quot;searchCountry&quot; class=&quot;col-sm-2 col-form-label&quot;&amp;gt;@Texts.Country&amp;lt;/label&amp;gt; &amp;lt;div class=&quot;col-sm-5&quot;&amp;gt; &amp;lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;searchCountry&quot; value=&quot;&quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;button type=&quot;button&quot; class=&quot;btn btn-sm btn-primary col-sm-2&quot; onclick=&quot;filterData()&quot;&amp;gt;@Texts.Search&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; @* Grid for data *@ &amp;lt;table class=&quot;table mt-2&quot;&amp;gt; &amp;lt;thead&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th scope=&quot;col&quot;&amp;gt;@Texts.Name&amp;lt;/th&amp;gt; &amp;lt;th scope=&quot;col&quot;&amp;gt;@Texts.Email&amp;lt;/th&amp;gt; &amp;lt;th scope=&quot;col&quot;&amp;gt;@Texts.Country&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/thead&amp;gt; &amp;lt;tbody id=&quot;customer-table-body&quot;&amp;gt; &amp;lt;tr class=&quot;loading-row&quot;&amp;gt; &amp;lt;td colspan=&quot;3&quot;&amp;gt;&amp;lt;progress&amp;gt;&amp;lt;/progress&amp;gt;&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/tbody&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;/div&amp;gt; @section Scripts { &amp;lt;script type=&quot;text/javascript&quot;&amp;gt; const CUSTOMER_ROW_SELECTOR = '.customer-row', LOADING_ROW_SELECTOR = '.loading-row', DISPLAY_NONE_CLASS = 'display-none', CUSTOMER_TABLE_BODY = $('#customer-table-body'); function loadData() { showLoader(); $.get('https://localhost:44313/api/customer') .done(function (customerList, textStatus, jqXHR) { CUSTOMER_TABLE_BODY.html(getDataRows(customerList)); showCustomerRows(CUSTOMER_TABLE_BODY.find(CUSTOMER_ROW_SELECTOR)); }) .fail(function (jqXHR, textStatus, errorThrown) { alert('error ' + textStatus + ' ' + errorThrown); }); } function getDataRows(customerList) { const rowTemplate = '&amp;lt;tr class=&quot;customer-row&quot;&amp;gt;&amp;lt;td&amp;gt;{name}&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;{email}&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;{country}&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;'; let dataRows = '&amp;lt;tr class=&quot;loading-row&quot;&amp;gt;&amp;lt;td colspan=&quot;3&quot;&amp;gt;&amp;lt;progress&amp;gt;&amp;lt;/progress&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;'; $.each(customerList, function (index, customer) { dataRows += rowTemplate .replace('{name}', customer.name) .replace('{email}', customer.email) .replace('{country}', customer.country); }); return dataRows; } function showLoader() { CUSTOMER_TABLE_BODY.find(LOADING_ROW_SELECTOR).removeClass(DISPLAY_NONE_CLASS); const dataRows = CUSTOMER_TABLE_BODY.find(CUSTOMER_ROW_SELECTOR); $.each(dataRows, function (index, row) { $(row).addClass(DISPLAY_NONE_CLASS); }); } function showCustomerRows(customerRows) { $.each(customerRows, function (index, row) { $(row).removeClass(DISPLAY_NONE_CLASS); }); CUSTOMER_TABLE_BODY.find(LOADING_ROW_SELECTOR).addClass(DISPLAY_NONE_CLASS); } function filterData() { showLoader(); const customerRows = CUSTOMER_TABLE_BODY.find(CUSTOMER_ROW_SELECTOR); const searchName = $('#searchCustomerName').val(); const searchEmail = $('#searchEmail').val(); const searchCountry = $('#searchCountry').val(); const rowsToShow = $.grep(customerRows, function (customerRow) { let columns = $(customerRow).find('td'); return isMatchForFilter(searchName, columns[0].innerHTML) &amp;amp;&amp;amp; isMatchForFilter(searchEmail, columns[1].innerHTML) &amp;amp;&amp;amp; isMatchForFilter(searchCountry, columns[2].innerHTML); }); showCustomerRows(rowsToShow); } function isMatchForFilter(searchValue, valueInRow) { return searchValue === '' || valueInRow.indexOf(searchValue) !== -1; } $(document).ready(function () { loadData(); }); &amp;lt;/script&amp;gt; } Self-executing functions An example of a self-executing module is shown below. The proper term for the self-executing module is Immediately Invoked Function Expressions or IIFE. (function ($, someOtherInjectedModule) { const CURRENT_MODULE = {}; const PRIVATE_VARIABLE = 'Hello world!'; CURRENT_MODULE.myPublicFunction = function() { privateFunction(); }; function privateFunction() { alert(PRIVATE_VARIABLE); } window.ModuleExample = CURRENT_MODULE; })(jQuery, window.SomeOtherModule); $(document).ready(function() { window.ModuleExample.myPublicFunction(); }); The function parameters make it possible to inject dependencies. This has 2 benefits. You can inject mocks when unit testing. This makes unit testing much easier. All the external dependencies, that the class relies on, are shown at the top and bottom of the file. Another great benefit that this pattern gives is variable scoping. All variables scoped within the module are scoped to the function and do not have to be global. The CURRENT_MODULE object and all its functions/properties are exposed globally by assigning it to a global window property. All the other “private” functions and variables are never exposed outside the scope of the self-executing function. The example as shown in the first code listing of this post rewritten with an IIFE is shown below. A working Visual Studio project with the code listed below can be found in my JavaScriptModuleExamples repository on GitHub. customer-overview.js: (function ($, customerService, utilitiesModule) { const CURRENT_MODULE = {}, CUSTOMER_ROW_SELECTOR = '.customer-row', LOADING_ROW_SELECTOR = '.loading-row', CUSTOMER_TABLE_BODY = $('#customer-table-body'); CURRENT_MODULE.initialize = function() { $('#customerOverviewSearchButton').on('click', CURRENT_MODULE.filterData); CURRENT_MODULE.loadData(); }; CURRENT_MODULE.loadData = function () { showLoader(); customerService.getCustomers(showCustomerData); }; CURRENT_MODULE.filterData = function () { showLoader(); const customerRows = CUSTOMER_TABLE_BODY.find(CUSTOMER_ROW_SELECTOR); const searchName = $('#searchCustomerName').val(); const searchEmail = $('#searchEmail').val(); const searchCountry = $('#searchCountry').val(); const rowsToShow = $.grep(customerRows, function (customerRow) { const columns = $(customerRow).find('td'); return utilitiesModule.isMatchForFilter(searchName, columns[0].innerHTML) &amp;amp;&amp;amp; utilitiesModule.isMatchForFilter(searchEmail, columns[1].innerHTML) &amp;amp;&amp;amp; utilitiesModule.isMatchForFilter(searchCountry, columns[2].innerHTML); }); showCustomerRows(rowsToShow); }; function showCustomerData(customerList) { CUSTOMER_TABLE_BODY.html(getDataRows(customerList)); showCustomerRows(); } function getDataRows(customerList) { const outerHtmlProperty = 'outerHTML'; const dataRowTemplateId = 'data-row-template'; const rowTemplate = $('#' + dataRowTemplateId).prop(outerHtmlProperty) .replace('id=&quot;' + dataRowTemplateId + '&quot;', ''); let dataRows = $(LOADING_ROW_SELECTOR).prop(outerHtmlProperty); $.each(customerList, function (index, customer) { dataRows += rowTemplate .replace('{name}', customer.name) .replace('{email}', customer.email) .replace('{country}', customer.country); }); return dataRows; } function showLoader() { utilitiesModule.showElement(LOADING_ROW_SELECTOR, CUSTOMER_TABLE_BODY); forEachCustomerRow(function (row) { utilitiesModule.hideElement(row, CUSTOMER_TABLE_BODY); }); } function showCustomerRows(filteredRows) { forEachCustomerRow(function (row) { utilitiesModule.showElement(row, CUSTOMER_TABLE_BODY); }, filteredRows); utilitiesModule.hideElement(LOADING_ROW_SELECTOR, CUSTOMER_TABLE_BODY); } function forEachCustomerRow(callBack, filteredRows) { let customerRows = CUSTOMER_TABLE_BODY.find(CUSTOMER_ROW_SELECTOR); if (filteredRows !== undefined) { customerRows = filteredRows; } $.each(customerRows, function (index, row) { callBack($(row)); }); } window.customerOverviewModule = CURRENT_MODULE; })(jQuery, window.customerService, window.utilitiesModule); $(document).ready(function () { window.customerOverviewModule.initialize(); }); utilities.js (function ($) { const CURRENT_MODULE = {}, DISPLAY_NONE_CLASS = 'display-none'; CURRENT_MODULE.isMatchForFilter = function (searchValue, valueInRow) { return searchValue === '' || valueInRow.indexOf(searchValue) !== -1; }; CURRENT_MODULE.hideElement = function (elementSelector, parentSelector) { let parent = getParent(parentSelector); parent.find(elementSelector).addClass(DISPLAY_NONE_CLASS); }; CURRENT_MODULE.showElement = function (elementSelector, parentSelector) { let parent = getParent(parentSelector); parent.find(elementSelector).removeClass(DISPLAY_NONE_CLASS); }; function getParent(parentSelector) { let parent = $(document); if (parentSelector !== undefined) { parent = $(parentSelector); } return parent; } window.utilitiesModule = CURRENT_MODULE; })(jQuery); customer-service.js (function ($) { const CURRENT_MODULE = {}, CUSTOMER_URI = 'https://localhost:44313/api/customer'; CURRENT_MODULE.getCustomers = function (successCallBack) { $.get(CUSTOMER_URI) .done(function (customerList, textStatus, jqXHR) { successCallBack(customerList); }) .fail(function (jqXHR, textStatus, errorThrown) { alert('error ' + textStatus + ' ' + errorThrown); }); }; window.customerService = CURRENT_MODULE; })(jQuery); index.cshtml: @page @model IndexModel @{ ViewData[&quot;Title&quot;] = &quot;Home page&quot;; } &amp;lt;div class=&quot;col&quot;&amp;gt; &amp;lt;h1&amp;gt;Customer overview&amp;lt;/h1&amp;gt; @* Searchform *@ &amp;lt;div id=&quot;search-customer&quot;&amp;gt; &amp;lt;div class=&quot;form-group row&quot;&amp;gt; &amp;lt;label for=&quot;searchCustomerName&quot; class=&quot;col-sm-2 col-form-label&quot;&amp;gt;@Texts.Name&amp;lt;/label&amp;gt; &amp;lt;div class=&quot;col-sm-5&quot;&amp;gt; &amp;lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;searchCustomerName&quot; value=&quot;&quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&quot;form-group row&quot;&amp;gt; &amp;lt;label for=&quot;searchEmail&quot; class=&quot;col-sm-2 col-form-label&quot;&amp;gt;@Texts.Email&amp;lt;/label&amp;gt; &amp;lt;div class=&quot;col-sm-5&quot;&amp;gt; &amp;lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;searchEmail&quot; value=&quot;&quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&quot;form-group row&quot;&amp;gt; &amp;lt;label for=&quot;searchCountry&quot; class=&quot;col-sm-2 col-form-label&quot;&amp;gt;@Texts.Country&amp;lt;/label&amp;gt; &amp;lt;div class=&quot;col-sm-5&quot;&amp;gt; &amp;lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;searchCountry&quot; value=&quot;&quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;button id=&quot;customerOverviewSearchButton&quot; type=&quot;button&quot; class=&quot;btn btn-sm btn-primary col-sm-2&quot;&amp;gt;@Texts.Search&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; @* Grid for data *@ &amp;lt;table class=&quot;table mt-2&quot;&amp;gt; &amp;lt;thead&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th scope=&quot;col&quot;&amp;gt;@Texts.Name&amp;lt;/th&amp;gt; &amp;lt;th scope=&quot;col&quot;&amp;gt;@Texts.Email&amp;lt;/th&amp;gt; &amp;lt;th scope=&quot;col&quot;&amp;gt;@Texts.Country&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/thead&amp;gt; &amp;lt;tbody id=&quot;customer-table-body&quot;&amp;gt; &amp;lt;tr class=&quot;loading-row&quot;&amp;gt; &amp;lt;td colspan=&quot;3&quot;&amp;gt;&amp;lt;progress&amp;gt;&amp;lt;/progress&amp;gt;&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/tbody&amp;gt; &amp;lt;/table&amp;gt; @* Row templates *@ &amp;lt;table class=&quot;display-none&quot;&amp;gt; &amp;lt;tr id=&quot;data-row-template&quot; class=&quot;customer-row&quot;&amp;gt; &amp;lt;td&amp;gt;{name}&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;{email}&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;{country}&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;/div&amp;gt; @section Scripts { &amp;lt;environment include=&quot;Development&quot;&amp;gt; &amp;lt;script src=&quot;~/js/utilities.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&quot;~/js/customer-service.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&quot;~/js/customer-overview.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/environment&amp;gt; &amp;lt;environment exclude=&quot;Development&quot;&amp;gt; &amp;lt;script src=&quot;~/js/dist/customer-overview.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/environment&amp;gt; } bundleconfig.json (to generate the minified file in de dist folder) [ { &quot;outputFileName&quot;: &quot;wwwroot/css/site.min.css&quot;, &quot;inputFiles&quot;: [ &quot;wwwroot/css/site.css&quot; ] }, { &quot;outputFileName&quot;: &quot;wwwroot/js/dist/customer-overview.min.js&quot;, &quot;inputFiles&quot;: [ &quot;wwwroot/js/utilities.js&quot;, &quot;wwwroot/js/customer-service.js&quot;, &quot;wwwroot/js/customer-overview.js&quot; ], &quot;minify&quot;: { &quot;enabled&quot;: true, &quot;renameLocals&quot;: true }, &quot;sourceMap&quot;: false } ] Separating HTML control events and JavaScript hook-ups When embedding JavaScript in the HTML pages, the event hookups are usually written directly in the controls, mixing markup with the JavaScript. In my opinion, this makes it harder to find how and where my JavaScript functions are used. By hooking up al the events in the JavaScript module there’s no need to embed any JavaScript in the markup for the page. The HTML markup is only used for layout. The functionality and/or interaction logic is completely separate and centralized in the JavaScript modules. There are still dependencies between the DOM and the JavaScript module but the test framework I have been using (Jest) provides a DOM mock. The DOM mock can be accessed like the browser DOM and you can test the interactions and their results. I’ll show examples in my next blog post. The example page with embedded JavaScript, rewritten with an IIFE is shown below. Event hookup before (in the html): &amp;lt;button type=&quot;button&quot; class=&quot;btn btn-sm btn-primary col-sm-2&quot; onclick=&quot;window.customerOverviewModule.filterData()&quot;&amp;gt;@Texts.Search&amp;lt;/button&amp;gt; Event hookup after refactoring to the IIFE: &amp;lt;button id=&quot;customerOverviewSearchButton&quot; type=&quot;button&quot; class=&quot;btn btn-sm btn-primary col-sm-2&quot;&amp;gt;@Texts.Search&amp;lt;/button&amp;gt; (function ($, customerService, utilitiesModule) { ///... CURRENT_MODULE.initialize = function() { $('#customerOverviewSearchButton').on('click', CURRENT_MODULE.filterData); CURRENT_MODULE.loadData(); }; CURRENT_MODULE.loadData = function () { ///... }; CURRENT_MODULE.filterData = function () { ///... }; ///... window.customerOverviewModule = CURRENT_MODULE; })(jQuery, window.customerService, window.utilitiesModule); $(document).ready(function () { window.customerOverviewModule.initialize(); }); Separating HTML templating from your JavaScript code Sometimes you have to create multiple repeating element groups from a JavaScript array. An example is calling an API to retrieve orders then printing a line with each order object. You might define a constant with the HTML template as a string in your JavaScript. For maintainability, code completion and analysis benefits, I find it better to just include a hidden div with the template on the page. You won’t have to deal with escaping reserved characters in a string like quotes and slashes and also gain indenting and linting support from your IDE. The HTML string used before the refactoring was: function getDataRows(customerList) { const rowTemplate = '&amp;lt;tr class=&quot;customer-row&quot;&amp;gt;&amp;lt;td&amp;gt;{name}&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;{email}&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;{country}&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;'; let dataRows = '&amp;lt;tr class=&quot;loading-row&quot;&amp;gt;&amp;lt;td colspan=&quot;3&quot;&amp;gt;&amp;lt;progress&amp;gt;&amp;lt;/progress&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;'; $.each(customerList, function (index, customer) { dataRows += rowTemplate .replace('{name}', customer.name) .replace('{email}', customer.email) .replace('{country}', customer.country); }); return dataRows; } The code using templating from the overview page example as an IIFE is shown below: @* Grid for data *@ &amp;lt;table class=&quot;table mt-2&quot;&amp;gt; &amp;lt;thead&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th scope=&quot;col&quot;&amp;gt;@Texts.Name&amp;lt;/th&amp;gt; &amp;lt;th scope=&quot;col&quot;&amp;gt;@Texts.Email&amp;lt;/th&amp;gt; &amp;lt;th scope=&quot;col&quot;&amp;gt;@Texts.Country&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/thead&amp;gt; &amp;lt;tbody id=&quot;customer-table-body&quot;&amp;gt; &amp;lt;tr class=&quot;loading-row&quot;&amp;gt; &amp;lt;td colspan=&quot;3&quot;&amp;gt;&amp;lt;progress&amp;gt;&amp;lt;/progress&amp;gt;&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/tbody&amp;gt; &amp;lt;/table&amp;gt; @* Row templates *@ &amp;lt;table class=&quot;display-none&quot;&amp;gt; &amp;lt;tr id=&quot;data-row-template&quot; class=&quot;customer-row&quot;&amp;gt; &amp;lt;td&amp;gt;{name}&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;{email}&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;{country}&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; function getDataRows(customerList) { const outerHtmlProperty = 'outerHTML'; const dataRowTemplateId = 'data-row-template'; const rowTemplate = $('#' + dataRowTemplateId).prop(outerHtmlProperty) .replace('id=&quot;' + dataRowTemplateId + '&quot;', ''); let dataRows = $(LOADING_ROW_SELECTOR).prop(outerHtmlProperty); $.each(customerList, function (index, customer) { dataRows += rowTemplate .replace('{name}', customer.name) .replace('{email}', customer.email) .replace('{country}', customer.country); }); return dataRows; }</summary></entry><entry><title type="html">Managing your client-side libraries</title><link href="https://samanthaneilen.github.io/2019/10/19/Managing-your-client-side-libraries.html" rel="alternate" type="text/html" title="Managing your client-side libraries" /><published>2019-10-19T01:00:00+02:00</published><updated>2019-10-19T01:00:00+02:00</updated><id>https://samanthaneilen.github.io/2019/10/19/Managing-your-client-side-libraries</id><content type="html" xml:base="https://samanthaneilen.github.io/2019/10/19/Managing-your-client-side-libraries.html">&lt;p&gt;If you start a new .NET Core Razor Pages or MVC project in Visual Studio, it will create a project containing a working starter website. However, due to the speed at which 3rd party libraries update, the included version of Bootstrap and jQuery will probably be out of date. There will also be an empty site stylesheet and JavaScript file with their nested minified equivalents. These placeholder files will not update their minified counterparts if you don’t configure a minifyer.  In this blog post, I explain the tags used for referencing client-side libraries, how to use LibMan for 3rd party client-side libraries and how to use BuildBundlerMinifier to bundle and minify files in your project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of contents:&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#how-the-script-and-stylesheets-are-referenced-in-the-view-files&quot; id=&quot;markdown-toc-how-the-script-and-stylesheets-are-referenced-in-the-view-files&quot;&gt;How the script and stylesheets are referenced in the view files.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#managing-3rd-party-client-side-libraries-with-libman&quot; id=&quot;markdown-toc-managing-3rd-party-client-side-libraries-with-libman&quot;&gt;Managing 3rd party Client-Side libraries with LibMan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-to-bundle-and-minify-your-custom-scripts&quot; id=&quot;markdown-toc-how-to-bundle-and-minify-your-custom-scripts&quot;&gt;How to bundle and minify your custom scripts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;how-the-script-and-stylesheets-are-referenced-in-the-view-files&quot;&gt;How the script and stylesheets are referenced in the view files.&lt;/h3&gt;

&lt;p&gt;.NET Core projects use the syntax below in the _Layout.cshtml to include 3rd party client-side libraries.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;environment&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;include=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Development&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/lib/bootstrap/dist/css/bootstrap.css&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/environment&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;environment&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;exclude=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Development&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot;&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;asp-fallback-href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/lib/bootstrap/dist/css/bootstrap.min.css&quot;&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;asp-fallback-test-class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sr-only&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;asp-fallback-test-property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;position&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;asp-fallback-test-value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;absolute&quot;&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/environment&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/css/site.css&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;environment&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;include=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Development&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/lib/jquery/dist/jquery.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/lib/bootstrap/dist/js/bootstrap.bundle.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/environment&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;environment&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;exclude=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Development&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;asp-fallback-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/lib/jquery/dist/jquery.min.js&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;asp-fallback-test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;window.jQuery&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;asp-fallback-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/lib/bootstrap/dist/js/bootstrap.bundle.min.js&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;asp-fallback-test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;window.jQuery &amp;amp;&amp;amp; window.jQuery.fn &amp;amp;&amp;amp; window.jQuery.fn.modal&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha384-xrRywqdh3PHs8keKZN+8zzc5TX0GRTLCcmivcbNJWm2rs5C8PRhcEn3czEjhAO9o&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/environment&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/js/site.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;asp-append-version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

    @RenderSection(&quot;Scripts&quot;, required: false)
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice the environment elements. When using the development environment, the local unminified files are used. For all other environments, it uses a CDN (content delivery network) link to a minified file. The value of “environment” is an environment variable and can be set via the Debug tab in the property pages or by changing the Properties/launchsettings file. For more information on using the environment variable see &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/fundamentals/environments&quot;&gt;the Microsoft docs page on this variable&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The asp-fallback-test attribute will check if a CSS class or JavaScript function for that specific file is available. If the test fails it will load the (local) script file that is defined in the asp-fallback-src attribute. For more information on the benefits of using the CDN and to dive deeper into the fallback attributes see the &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/built-in/link-tag-helper&quot;&gt;Microsoft Docs page for the Link Tag Helper&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The crossorigin attribute is always anonymous unless a cookie or user credentials are required to access the file from the remote location. For more information on this attribute see the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes&quot;&gt;MDN docs page for the crossorigin attribute&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The integrity attribute is probably the most important to know about in regard to upgrading library versions. The value of this attribute is a cryptographic hash that matches the contents for the file referenced file. If the referenced file and the hash no longer match up, the browser will see the file as a security compromise and block it. For more information on the integrity attribute, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity&quot;&gt;the MDN docs page for the integrity attribute&lt;/a&gt;. This page also has instructions and links for getting the appropriate hash for the files that you are trying to reference and embed on your website.&lt;/p&gt;

&lt;h3 id=&quot;managing-3rd-party-client-side-libraries-with-libman&quot;&gt;Managing 3rd party Client-Side libraries with LibMan&lt;/h3&gt;

&lt;p&gt;We used to manage front-end libraries with NuGet or include files manually. These days Visual Studio has support for LibMan for managing client-side libraries from several sources in a .NET Core web project. LibMan already has a basic &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/client-side/libman/libman-vs&quot;&gt;“Getting started” guide on Microsoft Docs&lt;/a&gt; so I will not be repeating the information contained in this post.&lt;/p&gt;

&lt;p&gt;If you need packages from NPM that have multiple dependencies, then LibMan (unpkg/jsDelivr source) will not crawl those dependencies and include any  of them. My advice is to just use NPM in that case. Also, try to stick to a single client-side package manager when possible for your project. This way the team won’t get confused about how the libraries are managed.&lt;/p&gt;

&lt;p&gt;LibMan is good at managing libraries without extra dependencies from cdnjs or other CDNs. If you use the “Add -&amp;gt; Client-Side library” option you get a visual editor however the “Manage Client-Side libraries” option will just open the libman.json file. This is something I found confusing at first. It turns out that the code completion in the JSON file provides the same experience as the visual editor. (It does, however, take a few minutes for the IntelliSense to fetch the results from the provider. So, if you’re not seeing the list of libraries or files, just wait a minute.)&lt;/p&gt;

&lt;p&gt;A few screenshots comparing the visual editor vs the libman.json experience:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20191019/ComparingLibrarySearch.png&quot; alt=&quot;[Comparing library search]&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20191019/ComparingVersionSearch.png&quot; alt=&quot;[Comparing version search]&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20191019/ComparingFileSelection.png&quot; alt=&quot;[Comparing file selection]&quot; /&gt;&lt;/p&gt;

&lt;p&gt;LibMan has out-of-the-box support for several sources but you can use the filesystem source if you need a file from another source. See the screenshot below for an example. The filesystem fallback only works with a complete URL to a single file in the library input field. (It will not work with wildcards or a directory).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20191019/FilesystemSearch.png&quot; alt=&quot;[Visual editor filesystem search]&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;how-to-bundle-and-minify-your-custom-scripts&quot;&gt;How to bundle and minify your custom scripts&lt;/h3&gt;

&lt;p&gt;When you create a new .NET Core web project in Visual Studio, an empty site.css and site.js with their minified counterparts will be added. When editing the unminified files, the minified files will not be updated with the changes made. You will need to configure an additional minification tool to enable the minification.&lt;/p&gt;

&lt;p&gt;I use the &lt;a href=&quot;https://github.com/madskristensen/BundlerMinifier&quot;&gt;BuildBundlerMinifier&lt;/a&gt; NuGet package to bundle and minify my own custom script and stylesheet files. To use it, first install the BuildBindlerMinifier package and add a  bundleconfig.json to the project containing the JSON contents as shown below to enable minification of the default files. Note that the input files parameter is an array, so you could provide multiple input files to bundle into one output file.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;outputFileName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wwwroot/css/site.min.css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;inputFiles&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wwwroot/css/site.css&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;outputFileName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wwwroot/js/site.min.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;inputFiles&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wwwroot/js/site.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;minify&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;enabled&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;renameLocals&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sourceMap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you build the project, the minified files will be updated with the contents from the input files.&lt;/p&gt;

&lt;p&gt;For information on how to configure bundling and minification for .NET Core, see &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/client-side/bundling-and-minification&quot;&gt;the Microsoft docs pages on bundling and minification&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="JavaScript" /><category term="Stylesheets" /><summary type="html">If you start a new .NET Core Razor Pages or MVC project in Visual Studio, it will create a project containing a working starter website. However, due to the speed at which 3rd party libraries update, the included version of Bootstrap and jQuery will probably be out of date. There will also be an empty site stylesheet and JavaScript file with their nested minified equivalents. These placeholder files will not update their minified counterparts if you don’t configure a minifyer. In this blog post, I explain the tags used for referencing client-side libraries, how to use LibMan for 3rd party client-side libraries and how to use BuildBundlerMinifier to bundle and minify files in your project. Table of contents: How the script and stylesheets are referenced in the view files. Managing 3rd party Client-Side libraries with LibMan How to bundle and minify your custom scripts How the script and stylesheets are referenced in the view files. .NET Core projects use the syntax below in the _Layout.cshtml to include 3rd party client-side libraries. &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;environment include=&quot;Development&quot;&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;~/lib/bootstrap/dist/css/bootstrap.css&quot; /&amp;gt; &amp;lt;/environment&amp;gt; &amp;lt;environment exclude=&quot;Development&quot;&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot; asp-fallback-href=&quot;~/lib/bootstrap/dist/css/bootstrap.min.css&quot; asp-fallback-test-class=&quot;sr-only&quot; asp-fallback-test-property=&quot;position&quot; asp-fallback-test-value=&quot;absolute&quot; crossorigin=&quot;anonymous&quot; integrity=&quot;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&quot;/&amp;gt; &amp;lt;/environment&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;~/css/site.css&quot; /&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;environment include=&quot;Development&quot;&amp;gt; &amp;lt;script src=&quot;~/lib/jquery/dist/jquery.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&quot;~/lib/bootstrap/dist/js/bootstrap.bundle.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/environment&amp;gt; &amp;lt;environment exclude=&quot;Development&quot;&amp;gt; &amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js&quot; asp-fallback-src=&quot;~/lib/jquery/dist/jquery.min.js&quot; asp-fallback-test=&quot;window.jQuery&quot; crossorigin=&quot;anonymous&quot; integrity=&quot;sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=&quot;&amp;gt; &amp;lt;/script&amp;gt; &amp;lt;script src=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js&quot; asp-fallback-src=&quot;~/lib/bootstrap/dist/js/bootstrap.bundle.min.js&quot; asp-fallback-test=&quot;window.jQuery &amp;amp;&amp;amp; window.jQuery.fn &amp;amp;&amp;amp; window.jQuery.fn.modal&quot; crossorigin=&quot;anonymous&quot; integrity=&quot;sha384-xrRywqdh3PHs8keKZN+8zzc5TX0GRTLCcmivcbNJWm2rs5C8PRhcEn3czEjhAO9o&quot;&amp;gt; &amp;lt;/script&amp;gt; &amp;lt;/environment&amp;gt; &amp;lt;script src=&quot;~/js/site.js&quot; asp-append-version=&quot;true&quot;&amp;gt;&amp;lt;/script&amp;gt; @RenderSection(&quot;Scripts&quot;, required: false) &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; Notice the environment elements. When using the development environment, the local unminified files are used. For all other environments, it uses a CDN (content delivery network) link to a minified file. The value of “environment” is an environment variable and can be set via the Debug tab in the property pages or by changing the Properties/launchsettings file. For more information on using the environment variable see the Microsoft docs page on this variable. The asp-fallback-test attribute will check if a CSS class or JavaScript function for that specific file is available. If the test fails it will load the (local) script file that is defined in the asp-fallback-src attribute. For more information on the benefits of using the CDN and to dive deeper into the fallback attributes see the Microsoft Docs page for the Link Tag Helper. The crossorigin attribute is always anonymous unless a cookie or user credentials are required to access the file from the remote location. For more information on this attribute see the MDN docs page for the crossorigin attribute. The integrity attribute is probably the most important to know about in regard to upgrading library versions. The value of this attribute is a cryptographic hash that matches the contents for the file referenced file. If the referenced file and the hash no longer match up, the browser will see the file as a security compromise and block it. For more information on the integrity attribute, see the MDN docs page for the integrity attribute. This page also has instructions and links for getting the appropriate hash for the files that you are trying to reference and embed on your website. Managing 3rd party Client-Side libraries with LibMan We used to manage front-end libraries with NuGet or include files manually. These days Visual Studio has support for LibMan for managing client-side libraries from several sources in a .NET Core web project. LibMan already has a basic “Getting started” guide on Microsoft Docs so I will not be repeating the information contained in this post. If you need packages from NPM that have multiple dependencies, then LibMan (unpkg/jsDelivr source) will not crawl those dependencies and include any of them. My advice is to just use NPM in that case. Also, try to stick to a single client-side package manager when possible for your project. This way the team won’t get confused about how the libraries are managed. LibMan is good at managing libraries without extra dependencies from cdnjs or other CDNs. If you use the “Add -&amp;gt; Client-Side library” option you get a visual editor however the “Manage Client-Side libraries” option will just open the libman.json file. This is something I found confusing at first. It turns out that the code completion in the JSON file provides the same experience as the visual editor. (It does, however, take a few minutes for the IntelliSense to fetch the results from the provider. So, if you’re not seeing the list of libraries or files, just wait a minute.) A few screenshots comparing the visual editor vs the libman.json experience: LibMan has out-of-the-box support for several sources but you can use the filesystem source if you need a file from another source. See the screenshot below for an example. The filesystem fallback only works with a complete URL to a single file in the library input field. (It will not work with wildcards or a directory). How to bundle and minify your custom scripts When you create a new .NET Core web project in Visual Studio, an empty site.css and site.js with their minified counterparts will be added. When editing the unminified files, the minified files will not be updated with the changes made. You will need to configure an additional minification tool to enable the minification. I use the BuildBundlerMinifier NuGet package to bundle and minify my own custom script and stylesheet files. To use it, first install the BuildBindlerMinifier package and add a bundleconfig.json to the project containing the JSON contents as shown below to enable minification of the default files. Note that the input files parameter is an array, so you could provide multiple input files to bundle into one output file. [ { &quot;outputFileName&quot;: &quot;wwwroot/css/site.min.css&quot;, &quot;inputFiles&quot;: [ &quot;wwwroot/css/site.css&quot; ] }, { &quot;outputFileName&quot;: &quot;wwwroot/js/site.min.js&quot;, &quot;inputFiles&quot;: [ &quot;wwwroot/js/site.js&quot; ], &quot;minify&quot;: { &quot;enabled&quot;: true, &quot;renameLocals&quot;: true }, &quot;sourceMap&quot;: false } ] If you build the project, the minified files will be updated with the contents from the input files. For information on how to configure bundling and minification for .NET Core, see the Microsoft docs pages on bundling and minification.</summary></entry><entry><title type="html">Front-end design</title><link href="https://samanthaneilen.github.io/2019/08/10/Front-end-design.html" rel="alternate" type="text/html" title="Front-end design" /><published>2019-08-10T01:00:00+02:00</published><updated>2019-08-10T01:00:00+02:00</updated><id>https://samanthaneilen.github.io/2019/08/10/Front-end-design</id><content type="html" xml:base="https://samanthaneilen.github.io/2019/08/10/Front-end-design.html">&lt;p&gt;&lt;strong&gt;Table of contents:&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#bootstrap&quot; id=&quot;markdown-toc-bootstrap&quot;&gt;Bootstrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#office-fabric-core&quot; id=&quot;markdown-toc-office-fabric-core&quot;&gt;Office Fabric (Core)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#material-design&quot; id=&quot;markdown-toc-material-design&quot;&gt;Material Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#icon-sets&quot; id=&quot;markdown-toc-icon-sets&quot;&gt;Icon sets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#further-reading-and-research&quot; id=&quot;markdown-toc-further-reading-and-research&quot;&gt;Further reading and research&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bootstrap&quot;&gt;&lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;When creating a new website with .NET Core, the template will already contain the Bootstrap design framework. This framework uses a grid system for creating a layout, has some out-of-the-box styled controls like dropdowns and tabs and has an icon set to use. Next to the default color scheme, it has some guidance on how to create your own color schemes. Bootstrap also has an eco-system of templates based on Bootstrap to get inspiration for your own designs.&lt;/p&gt;

&lt;h3 id=&quot;office-fabric-core&quot;&gt;&lt;a href=&quot;https://developer.microsoft.com/en-us/fabric#/get-started&quot;&gt;Office Fabric (Core)&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Another framework like Bootstrap is Office Fabric. This is a front-end design framework from Microsoft that can be used to design a website to look like an Office 365 application. This can be especially useful if you are creating a SharePoint hosted app or if you are creating  an app in an enterprise environment where users use a lot of the Office 365 websites. Users will get a certain feeling of consistency between all the applications and recognize iconography. The Core framework is a stylesheet that comes with a grid system, fonts, animation classes and an icon set that is used in Office 365 and contains icons for most Office applications. The website for Office Fabric also lists the colors for the Microsoft application. There are also out-of-the-box web controls, but these use the React framework. The controls that use just vanilla JavaScript have been marked deprecated.&lt;/p&gt;

&lt;h3 id=&quot;material-design&quot;&gt;&lt;a href=&quot;https://material.io/design/&quot;&gt;Material Design&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Material Design is a set of design guidelines by Google. There are several Bootstrap implementations that use these guidelines. They give you easy access to an implementation of these guidelines for your application. &lt;a href=&quot;https://mdbootstrap.com/docs/jquery/components/demo/&quot;&gt;Use this link for an overview of a few Bootstrap components with Material Design applied&lt;/a&gt;. The provided link points to an implementation that has several implementations (free or paid) using JQuery, Angular, React and Vue.&lt;/p&gt;

&lt;h3 id=&quot;icon-sets&quot;&gt;Icon sets&lt;/h3&gt;

&lt;p&gt;When using one of the above design frameworks (or just using your own design), you may have need of some icons as a visual aid for a user. The links below point to some icon sets that you could use. When using icons from different frameworks or sources be aware that, just like fonts, icons from a different set may have a different line or edge shape. Mixing and matching icons from different sets may break the feeling of consistency for your user. If you really need or want to use an icon from a different set that you are already using, consider changing all or all related current icons to the new set. By related icons I mean the ones whose functionality or concept is similar and are usually near each other on the page.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fontawesome.com/&quot;&gt;Font awesome icons&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ionicons.com/&quot;&gt;Ion icons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;further-reading-and-research&quot;&gt;Further reading and research&lt;/h3&gt;

&lt;p&gt;The design frameworks in mentioned in this post adhere to a certain style and UX (user-experience) guidelines to help you create nicer looking sites. Using these frameworks is a good way of getting started but is not a sure way to create a good looking and usable site. Some links and resources to further content on what makes “good design” and “good user-experience” can be found listed below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.uxbooth.com/articles/8-must-see-ux-diagrams/&quot;&gt;Blogpost about 8 different UX diagrams&lt;/a&gt;: The UX diagrams mentioned in this post are a good starting point for discovering some theories and guidelines for good UX.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/dp/9490947725/ref=cm_sw_em_r_mt_dp_U_0KNtDb84VSDWY&quot;&gt;The book Visual language&lt;/a&gt;: This book is a great read if you are interested in how people perceive visual information. It also has some concrete guidelines and examples on how to design a website or magazine.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.darkpatterns.org/types-of-dark-pattern&quot;&gt;A website about Dark patterns&lt;/a&gt;: This website contains a list of dark patterns for website design. Dark patterns are ways to fool or confuse a user and should be avoided.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://userinyerface.com/&quot;&gt;The userinyerface.com game&lt;/a&gt;: As heard on the &lt;a href=&quot;https://msdevshow.com/2019/07/graph-toolkit-with-nikola-metulev/&quot;&gt;MS Dev Show episode talking about the Microsoft Graph web controls&lt;/a&gt;. This game challenges you on navigating through a form with a very bad design.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And some links to podcast episodes about user interface/ user-experience design:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codenewbie.org/podcast/why-you-should-understand-user-interface-and-design&quot;&gt;CodeNewbie: Why you should understand user interface and design with Mina Markham&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codenewbie.org/podcast/ux-in-healthcare&quot;&gt;CodeNewbie: UX in healthcare with Danielle Smith&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learntocodewith.me/podcast/product-design/&quot;&gt;Learn to code with me: How to break into product design with Lenora Porter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dotnetrocks.com/?show=1618&quot;&gt;DotNet Rocks: UX Design for Developers with Billy Hollis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dotnetrocks.com/?show=1643&quot;&gt;DotNet Rocks: Integrating UX in your Development Process with Debbie Levitt&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://completedeveloperpodcast.com/episode-175/&quot;&gt;Complete Developer Podcast: Dark Patterns in UI Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hanselminutes.com/602/web-animation-at-work-with-rachel-nabors&quot;&gt;Hanselminutes: Web Animation at Work with Rachel Nabors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="UX" /><category term="UserInterface" /><summary type="html">Table of contents: Bootstrap Office Fabric (Core) Material Design Icon sets Further reading and research Bootstrap When creating a new website with .NET Core, the template will already contain the Bootstrap design framework. This framework uses a grid system for creating a layout, has some out-of-the-box styled controls like dropdowns and tabs and has an icon set to use. Next to the default color scheme, it has some guidance on how to create your own color schemes. Bootstrap also has an eco-system of templates based on Bootstrap to get inspiration for your own designs. Office Fabric (Core) Another framework like Bootstrap is Office Fabric. This is a front-end design framework from Microsoft that can be used to design a website to look like an Office 365 application. This can be especially useful if you are creating a SharePoint hosted app or if you are creating an app in an enterprise environment where users use a lot of the Office 365 websites. Users will get a certain feeling of consistency between all the applications and recognize iconography. The Core framework is a stylesheet that comes with a grid system, fonts, animation classes and an icon set that is used in Office 365 and contains icons for most Office applications. The website for Office Fabric also lists the colors for the Microsoft application. There are also out-of-the-box web controls, but these use the React framework. The controls that use just vanilla JavaScript have been marked deprecated. Material Design Material Design is a set of design guidelines by Google. There are several Bootstrap implementations that use these guidelines. They give you easy access to an implementation of these guidelines for your application. Use this link for an overview of a few Bootstrap components with Material Design applied. The provided link points to an implementation that has several implementations (free or paid) using JQuery, Angular, React and Vue. Icon sets When using one of the above design frameworks (or just using your own design), you may have need of some icons as a visual aid for a user. The links below point to some icon sets that you could use. When using icons from different frameworks or sources be aware that, just like fonts, icons from a different set may have a different line or edge shape. Mixing and matching icons from different sets may break the feeling of consistency for your user. If you really need or want to use an icon from a different set that you are already using, consider changing all or all related current icons to the new set. By related icons I mean the ones whose functionality or concept is similar and are usually near each other on the page. Font awesome icons Ion icons Further reading and research The design frameworks in mentioned in this post adhere to a certain style and UX (user-experience) guidelines to help you create nicer looking sites. Using these frameworks is a good way of getting started but is not a sure way to create a good looking and usable site. Some links and resources to further content on what makes “good design” and “good user-experience” can be found listed below. Blogpost about 8 different UX diagrams: The UX diagrams mentioned in this post are a good starting point for discovering some theories and guidelines for good UX. The book Visual language: This book is a great read if you are interested in how people perceive visual information. It also has some concrete guidelines and examples on how to design a website or magazine. A website about Dark patterns: This website contains a list of dark patterns for website design. Dark patterns are ways to fool or confuse a user and should be avoided. The userinyerface.com game: As heard on the MS Dev Show episode talking about the Microsoft Graph web controls. This game challenges you on navigating through a form with a very bad design. And some links to podcast episodes about user interface/ user-experience design: CodeNewbie: Why you should understand user interface and design with Mina Markham CodeNewbie: UX in healthcare with Danielle Smith Learn to code with me: How to break into product design with Lenora Porter DotNet Rocks: UX Design for Developers with Billy Hollis DotNet Rocks: Integrating UX in your Development Process with Debbie Levitt Complete Developer Podcast: Dark Patterns in UI Design Hanselminutes: Web Animation at Work with Rachel Nabors</summary></entry><entry><title type="html">Static code analysis for your C# projects</title><link href="https://samanthaneilen.github.io/2019/06/22/Static-code-analysis-for-your-csharp-projects.html" rel="alternate" type="text/html" title="Static code analysis for your C# projects" /><published>2019-06-22T01:00:00+02:00</published><updated>2019-06-22T01:00:00+02:00</updated><id>https://samanthaneilen.github.io/2019/06/22/Static-code-analysis-for-your-csharp-projects</id><content type="html" xml:base="https://samanthaneilen.github.io/2019/06/22/Static-code-analysis-for-your-csharp-projects.html">&lt;p&gt;Static code analysis analyzes your source code or compiled DLL files for certain patterns or filenames. There are several code analyzers available for C# in Visual Studio and/or Azure DevOps. These code analyzers improve consistency, prevent technical debt and prevent security issues.&lt;/p&gt;

&lt;p&gt;The older Code Analysis features in Visual Studio (Analyze &amp;gt; Run Code Analysis option) and Project properties (Code Analysis tab) are marked as deprecated and will not be covered in this post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of contents:&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#visual-studio-built-in-analyzers&quot; id=&quot;markdown-toc-visual-studio-built-in-analyzers&quot;&gt;Visual Studio built-in analyzers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#sonarlint&quot; id=&quot;markdown-toc-sonarlint&quot;&gt;SonarLint&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#sonarqube&quot; id=&quot;markdown-toc-sonarqube&quot;&gt;SonarQube&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#security-code-scan&quot; id=&quot;markdown-toc-security-code-scan&quot;&gt;Security Code Scan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#auditnet&quot; id=&quot;markdown-toc-auditnet&quot;&gt;Audit.NET&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#whitesource-bolt&quot; id=&quot;markdown-toc-whitesource-bolt&quot;&gt;WhiteSource Bolt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;visual-studio-built-in-analyzers&quot;&gt;Visual Studio built-in analyzers&lt;/h3&gt;

&lt;p&gt;The Visual Studio compiler (Roslyn) already has some built-in analyzer rules. When loading a project (like the &lt;a href=&quot;https://github.com/dotnet-architecture/eShopOnWeb&quot;&gt;eShopOnWeb&lt;/a&gt; reference implementation) and opening a file, the analyzers installed in Visual Studio will analyze the file and show any error, warning or information message in the Visual Studio error list window.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20190622/Default-style-messages.png&quot; alt=&quot;[Default style messages]&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By default, Visual Studio will only contain some analyzers for code styling that output as information messages. You can edit the default code analyzer rules in the Visual Studio options via:&lt;/p&gt;

&lt;p&gt;Tools &amp;gt; Options &amp;gt; Text Editor &amp;gt; C# &amp;gt; Code Style&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20190622/Default-style-messages-settings.png&quot; alt=&quot;[Default style messages settings]&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The severity of the ruleset can be changed in this options window:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20190622/Default-style-messages-set-to-warning.png&quot; alt=&quot;[Default style messages settings set severity]&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By default, it only analyzes the open file but you can enable solution-wide analysis in the Visual Studio options to asynchronously analyze the entire solution. This option is found via:&lt;/p&gt;

&lt;p&gt;Tools &amp;gt; Options &amp;gt; Text Editor &amp;gt; C# &amp;gt; Advanced &amp;gt; Enable full solution analysis&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20190622/Enable-full-solution-analysis.png&quot; alt=&quot;[Enable full solution analysis]&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you use Visual Studio 2019 and you have set rules resulting in errors or warnings, you will also see a counter at the bottom of the file alerting you to issues in the files. There are also the colored squiggly lines in the text editor below the statement that may have and issue. There are colored blocks in the scrollbar of the text editor indicating where the issues are located in a file. And if you have the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.ProductivityPowerPack2017&quot;&gt;Productivity Power Tools&lt;/a&gt; extension installed the Solution Error Visualization will show the same colored squiggly lines in the Solution Explorer window below filenames that have issues.&lt;/p&gt;

&lt;p&gt;I have marked all visual indicators for errors and or warnings in the screenshot below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20190622/Visual-indicators-for-issues.png&quot; alt=&quot;[Visual indicators for warnings or errors]&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sonarlint&quot;&gt;SonarLint&lt;/h3&gt;

&lt;p&gt;For extra code analysis, I use the &lt;a href=&quot;https://www.sonarlint.org/visualstudio/&quot;&gt;SonarLint extension&lt;/a&gt; in Visual Studio. This extension loads extra code analysis rules for several categories (code smells, bugs and security issues). For the full list see the &lt;a href=&quot;https://rules.sonarsource.com/csharp&quot;&gt;SonarSource rules pages&lt;/a&gt;. Rules from SonarLint can be identified by the S prefix in the Error list window.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20190622/SonarLint-messages.png&quot; alt=&quot;[SonarLint warnings example]&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can use a .ruleset file in your project to disable or change the default severities or disable warnings for the default rules. See the &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/code-quality/how-to-create-a-custom-rule-set&quot;&gt;Microsoft Docs page for adding ruleset files&lt;/a&gt; for more instructions.&lt;/p&gt;

&lt;p&gt;When using SonarLint, I usually enable the category column in my error list window to triage the warnings shown. You can right-click the error list window and use the option Show Columns &amp;gt; Category to add it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20190622/Add-Category-column-to-error-list.png&quot; alt=&quot;[Add Category column to error list]&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sonarqube&quot;&gt;SonarQube&lt;/h3&gt;

&lt;p&gt;The SonarLint extension also enables integration with a &lt;a href=&quot;https://www.sonarqube.org/&quot;&gt;SonarQube server&lt;/a&gt;. SonarQube is open source static code analysis platform that can integrate &lt;a href=&quot;https://www.sonarlint.org/visualstudio/#visualstudio-connected-mode&quot;&gt;with Visual Studio&lt;/a&gt; and &lt;a href=&quot;https://www.azuredevopslabs.com/labs/vstsextend/sonarqube/&quot;&gt;with Azure DevOps&lt;/a&gt;. SonarQube can be used to define a ruleset that all team members can download into new or existing projects. SonarQube (when integrating with Azure DevOps) can also provide code coverage metrics and code duplication analysis. It can also provide insight into the number of issues over time and provides a technical debt score for a solution. You can also fail a build if your solution does not meet a configured quality gate. SonarQube is great in providing code analysis and related dashboards especially when working with a team on a code project. See the &lt;a href=&quot;https://www.sonarqube.org/&quot;&gt;SonarQube&lt;/a&gt; website for all the features and installation instructions.&lt;/p&gt;

&lt;h3 id=&quot;security-code-scan&quot;&gt;Security Code Scan&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://security-code-scan.github.io/&quot;&gt;Security Code Scan&lt;/a&gt; is a static analyzer extension focusing on security issues in your code. It checks for patterns that indicate SQL injection or XSS vulnerabilities in your code and several other issues that are defined by &lt;a href=&quot;https://www.owasp.org/index.php/Main_Page&quot;&gt;OWASP&lt;/a&gt; as security issues.&lt;/p&gt;

&lt;p&gt;After installing the extension (and enabling full solution-wide analysis) the warnings from Security Code Scan are listed with the prefix SCS.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20190622/Security-Code-Scan-messages.png&quot; alt=&quot;[Security Code Scan messages]&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;auditnet&quot;&gt;Audit.NET&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/OSSIndex/audit.NET&quot;&gt;Audit.NET&lt;/a&gt; is an &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=VorSecurity.AuditNet&quot;&gt;extension for Visual Studio&lt;/a&gt; that scans your package.config file and compares the package references against several public databases containing known vulnerabilities. Any issues with packages are shown in the Error window as errors. These errors are not blocking and will not result prevent you from building, debugging or running your solutions.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20190622/AuditNET-errors.png&quot; alt=&quot;[Audit.NET messages]&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At the time of this writing, the extension can analyze .NET Core projects (and the new package references) but it does not seem to properly show the current issues in the error window.&lt;/p&gt;

&lt;h3 id=&quot;whitesource-bolt&quot;&gt;WhiteSource Bolt&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://bolt.whitesourcesoftware.com/azure/&quot;&gt;WhiteSoure Bolt&lt;/a&gt; is the free version of WhiteSource and can be integrated &lt;a href=&quot;https://www.azuredevopslabs.com/labs/vstsextend/whitesource/&quot;&gt;with Azure DevOps&lt;/a&gt;. The free version can be used in a commercial environment but beware of the &lt;a href=&quot;https://bolt.whitesourcesoftware.com/azure/terms/&quot;&gt;terms of service&lt;/a&gt; data and usage policies as it does send and store metadata and file hashes to WhiteSource hosted in America. This may be an issue in certain corporate environments (especially in Europe).&lt;/p&gt;

&lt;p&gt;WhiteSource Bolt analyzes your project and will report on NuGet packages or included DLL files with known vulnerabilities. It will also give you an overview of all used 3rd party components and their licenses.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;https://www.azuredevopslabs.com/labs/vstsextend/whitesource/&quot;&gt;the Azure DevOps labs last step of the Trigger a build section&lt;/a&gt; for screenshots of the report for a build.&lt;/p&gt;</content><author><name></name></author><category term="VisualStudio" /><category term="StaticCodeAnalysis" /><summary type="html">Static code analysis analyzes your source code or compiled DLL files for certain patterns or filenames. There are several code analyzers available for C# in Visual Studio and/or Azure DevOps. These code analyzers improve consistency, prevent technical debt and prevent security issues. The older Code Analysis features in Visual Studio (Analyze &amp;gt; Run Code Analysis option) and Project properties (Code Analysis tab) are marked as deprecated and will not be covered in this post. Table of contents: Visual Studio built-in analyzers SonarLint SonarQube Security Code Scan Audit.NET WhiteSource Bolt Visual Studio built-in analyzers The Visual Studio compiler (Roslyn) already has some built-in analyzer rules. When loading a project (like the eShopOnWeb reference implementation) and opening a file, the analyzers installed in Visual Studio will analyze the file and show any error, warning or information message in the Visual Studio error list window. By default, Visual Studio will only contain some analyzers for code styling that output as information messages. You can edit the default code analyzer rules in the Visual Studio options via: Tools &amp;gt; Options &amp;gt; Text Editor &amp;gt; C# &amp;gt; Code Style The severity of the ruleset can be changed in this options window: By default, it only analyzes the open file but you can enable solution-wide analysis in the Visual Studio options to asynchronously analyze the entire solution. This option is found via: Tools &amp;gt; Options &amp;gt; Text Editor &amp;gt; C# &amp;gt; Advanced &amp;gt; Enable full solution analysis If you use Visual Studio 2019 and you have set rules resulting in errors or warnings, you will also see a counter at the bottom of the file alerting you to issues in the files. There are also the colored squiggly lines in the text editor below the statement that may have and issue. There are colored blocks in the scrollbar of the text editor indicating where the issues are located in a file. And if you have the Productivity Power Tools extension installed the Solution Error Visualization will show the same colored squiggly lines in the Solution Explorer window below filenames that have issues. I have marked all visual indicators for errors and or warnings in the screenshot below: SonarLint For extra code analysis, I use the SonarLint extension in Visual Studio. This extension loads extra code analysis rules for several categories (code smells, bugs and security issues). For the full list see the SonarSource rules pages. Rules from SonarLint can be identified by the S prefix in the Error list window. You can use a .ruleset file in your project to disable or change the default severities or disable warnings for the default rules. See the Microsoft Docs page for adding ruleset files for more instructions. When using SonarLint, I usually enable the category column in my error list window to triage the warnings shown. You can right-click the error list window and use the option Show Columns &amp;gt; Category to add it. SonarQube The SonarLint extension also enables integration with a SonarQube server. SonarQube is open source static code analysis platform that can integrate with Visual Studio and with Azure DevOps. SonarQube can be used to define a ruleset that all team members can download into new or existing projects. SonarQube (when integrating with Azure DevOps) can also provide code coverage metrics and code duplication analysis. It can also provide insight into the number of issues over time and provides a technical debt score for a solution. You can also fail a build if your solution does not meet a configured quality gate. SonarQube is great in providing code analysis and related dashboards especially when working with a team on a code project. See the SonarQube website for all the features and installation instructions. Security Code Scan Security Code Scan is a static analyzer extension focusing on security issues in your code. It checks for patterns that indicate SQL injection or XSS vulnerabilities in your code and several other issues that are defined by OWASP as security issues. After installing the extension (and enabling full solution-wide analysis) the warnings from Security Code Scan are listed with the prefix SCS. Audit.NET Audit.NET is an extension for Visual Studio that scans your package.config file and compares the package references against several public databases containing known vulnerabilities. Any issues with packages are shown in the Error window as errors. These errors are not blocking and will not result prevent you from building, debugging or running your solutions. At the time of this writing, the extension can analyze .NET Core projects (and the new package references) but it does not seem to properly show the current issues in the error window. WhiteSource Bolt WhiteSoure Bolt is the free version of WhiteSource and can be integrated with Azure DevOps. The free version can be used in a commercial environment but beware of the terms of service data and usage policies as it does send and store metadata and file hashes to WhiteSource hosted in America. This may be an issue in certain corporate environments (especially in Europe). WhiteSource Bolt analyzes your project and will report on NuGet packages or included DLL files with known vulnerabilities. It will also give you an overview of all used 3rd party components and their licenses. See the Azure DevOps labs last step of the Trigger a build section for screenshots of the report for a build.</summary></entry></feed>